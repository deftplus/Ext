#Область ОписаниеПеременных
Перем Разделитель, КаталогДляШаблонов;
Перем ДатаНачала, ДатаОкончания;
Перем ФормироватьШаблон;
#КонецОбласти

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЭтаФорма.Заголовок = "Загрузка данных из РС, версия от " + Формат( Объект.ДатаПоследнегоИзменения, "ДФ=dd.MM.yyyy" );
	ЗаполнитьПериод();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если Параметры.ИдентификаторКоманды = "НастроитьОбработку" Тогда
		Отказ = Истина;
		ПараметрыОткрытия = Новый Структура(Параметры);
		ОткрытьФорму("ВнешняяОбработка.ЗагрузкаТекстовыйОбмен_РС_в_1С.Форма.НастройкиФоновойЗагрузки", ПараметрыОткрытия);
		
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(СписокЗагружаемыхОбъектов) Тогда
		ЗаполнитьСписокЗагружаемых();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПрочитатьИЗаписать(Команда)
	ПрочитатьИЗаписатьНаСервере();
	ЭтаФорма.ОбновитьОтображениеДанных();
КонецПроцедуры

&НаСервере
Процедура ПрочитатьИЗаписатьНаСервере()
	
	Обработка = РеквизитФормыВЗначение("Объект");
	ПараметрыВыполнения = Новый Структура;
	ПараметрыВыполнения.Вставить("МассивЗагружаемых", Новый Массив);
	Для Каждого ЭлементСписка Из СписокЗагружаемыхОбъектов Цикл
		Если ЭлементСписка.Пометка Тогда
			ПараметрыВыполнения.МассивЗагружаемых.Добавить(ЭлементСписка.Значение);
			Если ЭлементСписка.Значение = "РТУ" Тогда
				ПараметрыВыполнения.МассивЗагружаемых.Добавить("Р_Т_У");
			ИначеЕсли ЭлементСписка.Значение = "ПТУ" Тогда
				ПараметрыВыполнения.МассивЗагружаемых.Добавить("П_Т_У");
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	Если НЕ Элементы.ФормаНеГрузитьНоменклатуруИКонтрагентов.Пометка Тогда
		БезусловноЗагружаемые = Новый Структура("СправочникНоменклатураРС, СправочникКонтрагенты, СправочникБренд");
		Для Каждого КЗ Из БезусловноЗагружаемые Цикл
			Если ПараметрыВыполнения.МассивЗагружаемых.Найти(КЗ.Ключ) = Неопределено Тогда
				ПараметрыВыполнения.МассивЗагружаемых.Вставить(0, КЗ.Ключ);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	Если ЗначениеЗаполнено(Каталог) Тогда
		ПараметрыВыполнения.Вставить("Каталог", Каталог);
	КонецЕсли;
	ПараметрыВыполнения.Вставить("Период", Период);
	Обработка.ОбработатьФайлы( ПараметрыВыполнения );
	
КонецПроцедуры

&НаСервере
Процедура СформироватьПродажиНаСервере()

	#Область Запрос
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РеализацияТоваровУслуг.Ссылка КАК Ссылка,
		|	""Продажа_ШапкаДокумента"" КАК ШапкаДокумента,
		|	РеализацияТоваровУслуг.Ссылка.Организация.ИНН КАК ОрганизацияИНН,
		|	""0"" КАК ОбменПоЭДО,
		|	РеализацияТоваровУслуг.Ссылка.Дата КАК Дата,
		|	РеализацияТоваровУслуг.Ссылка.Номер КАК Номер,
		|	РеализацияТоваровУслуг.Ссылка.Склад.Код КАК СкладКод,
		|	РеализацияТоваровУслуг.Ссылка.Контрагент.ИНН КАК КонтрагентИНН,
		|	РеализацияТоваровУслуг.Ссылка.Контрагент.КПП КАК КонтрагентКПП,
		|	КонтрагентыДополнительныеРеквизиты.Значение КАК КонтрагентКодРС,
		|	РеализацияТоваровУслуг.Ссылка.ДоговорКонтрагента КАК ДоговорКонтрагента,
		|	РеализацияТоваровУслуг.Ссылка.ДоговорКонтрагента.Номер КАК ДоговорКонтрагентаНомер,
		|	РеализацияТоваровУслуг.Ссылка.ДоговорКонтрагента.Дата КАК ДоговорКонтрагентаДата,
		|	ВЫБОР
		|		КОГДА РеализацияТоваровУслуг.Ссылка.СуммаВключаетНДС
		|			ТОГДА ""Истина""
		|		ИНАЧЕ ""Ложь""
		|	КОНЕЦ КАК СуммаВключаетНДС,
		|	РеализацияТоваровУслуг.Ссылка.ВалютаДокумента.Код КАК ВалютаДокументаКод,
		|	РеализацияТоваровУслуг.Ссылка.КурсВзаиморасчетов КАК КурсВзаиморасчетов,
		|	РеализацияТоваровУслуг.Ссылка.Грузополучатель.ИНН КАК ГрузополучательИНН,
		|	РеализацияТоваровУслуг.Ссылка.Грузополучатель.КПП КАК ГрузополучательКПП,
		|	ГрузополучательДополнительныеРеквизиты.Значение КАК ГрузополучательКодРС,
		|	РеализацияТоваровУслуг.СчетНаОплатуПокупателю.Ссылка КАК СчетНаОплатуПокупателю,
		|	СчетФактураВыданный.Ссылка КАК СчетФактураВыданныйСсылка,
		|	СчетФактураВыданный.Дата КАК СчетФактураВыданныйДата,
		|	СчетФактураВыданный.Номер КАК СчетФактураВыданныйНомер,
		|	СчетФактураВыданный.ДатаВыставления КАК СчетФактураВыданныйДатаВыставления,
		|	СчетФактураВыданный.ВалютаДокумента.Код КАК СчетФактураВыданныйВалютаДокументаКод,
		|	СчетФактураВыданный.Сумма КАК СчетФактураВыданныйСумма,
		|	СчетФактураВыданный.СуммаДокумента КАК СчетФактураВыданныйСуммаДокумента,
		|	СчетФактураВыданный.СуммаНДС КАК СчетФактураВыданныйСуммаНДС,
		|	СчетФактураВыданный.СуммаНДСДокумента КАК СчетФактураВыданныйСуммаНДСДокумента
		|ИЗ
		|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный КАК СчетФактураВыданный
		|		ПО (СчетФактураВыданный.ДокументОснование = РеализацияТоваровУслуг.Ссылка)
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты.ДополнительныеРеквизиты КАК КонтрагентыДополнительныеРеквизиты
		|		ПО (КонтрагентыДополнительныеРеквизиты.Ссылка = РеализацияТоваровУслуг.Контрагент.Ссылка)
		|			И (КонтрагентыДополнительныеРеквизиты.Свойство.Имя = &Свойство)
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты.ДополнительныеРеквизиты КАК ГрузополучательДополнительныеРеквизиты
		|		ПО (ГрузополучательДополнительныеРеквизиты.Ссылка = РеализацияТоваровУслуг.Грузополучатель.Ссылка)
		|			И (ГрузополучательДополнительныеРеквизиты.Свойство.Имя = &Свойство)
		|ГДЕ
		|	РеализацияТоваровУслуг.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРеализацияТоваров.Товары)
		|	И РеализацияТоваровУслуг.Проведен
		|	И РеализацияТоваровУслуг.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания";
		//|	И РеализацияТоваровУслуг.Номер = ""32180Л21""";
		//|	И НЕ РеализацияТоваровУслуг.СчетНаОплатуПокупателю.Ссылка ЕСТЬ NULL";
	
	Запрос.УстановитьПараметр("ДатаНачала", ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания", ДатаОкончания);
	Запрос.УстановитьПараметр("Свойство", "КодРС_Контрагент");
	#КонецОбласти
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Если ФормироватьШаблон Тогда
		ТекстовыйФайлПуть = КаталогДляШаблонов + "РТУ.txt";
		ТекстовыйФайл = Новый ТекстовыйДокумент;
	
		ТекстовыйФайл.ДобавитьСтроку("****************************************************");
		ТекстовыйФайл.ДобавитьСтроку("СТРУКТУРА ДОКУМЕНТА ПРОДАЖИ - РеализацияТоваровУслуг");
		ТекстовыйФайл.ДобавитьСтроку("****************************************************");
		ТекстовыйФайл.ДобавитьСтроку(		"Продажа_ШапкаДокумента" + Разделитель +
											"ОрганизацияИНН" + Разделитель +
											"ОбменПоЭДО" + Разделитель +
											"ПризнакТорговойПлощадки" + Разделитель +
											"НомерЗаказаТорговойПлощадки" + Разделитель +
											"Дата" + Разделитель +
											"Номер" + Разделитель +
											"СкладКод" + Разделитель +
											"КонтрагентИНН" + Разделитель +
											"КонтрагентКПП" + Разделитель +
											"КонтрагентКодРС" + Разделитель +
											"ДоговорКонтрагента" + Разделитель +
											"ДоговорКонтрагентаНомер" + Разделитель +
											"ДоговорКонтрагентаДата" + Разделитель +
											"СуммаВключаетНДС" + Разделитель +
											"ВалютаДокументаКод" + Разделитель +
											"КурсВзаиморасчетов" + Разделитель +
											"ГрузополучательИНН" + Разделитель +
											"ГрузополучательКПП" + Разделитель +
											"ГрузополучательКодРС" );
		ТекстовыйФайл.ДобавитьСтроку("Продажа_ТЧ_Документа;" + 
									"ТоварАртикул" + Разделитель + 
									"ТоварКоличество" + Разделитель + 
									"ТоварЦена" + Разделитель + 
									"ТоварСумма" + Разделитель + 
									"ТоварСтавкаНДС" + Разделитель + 
									"ТоварСуммаНДС" + Разделитель + 
									"ТоварВсего" + Разделитель + 
									//СокрЛП(Товар.РНПТ
									"ТоварНомерГТД" + Разделитель + 
									"ТоварСтранаПроисхожденияКод" + Разделитель + 
									//СокрЛП(Товар.EAN
									//СокрЛП(Товар.ТаможенныйСоюз: 0-нет, 1-да
									"ТоварКодТНВЭД" );
									//СокрЛП(Товар.Вес, кг.;
									
		ТекстовыйФайл.ДобавитьСтроку("ПродажаСчетФактураВыданный_ШапкаДокумента" + Разделитель +
										"СчетФактураВыданныйНомер" + Разделитель +
										"СчетФактураВыданныйДата" + Разделитель +
										"СчетФактураВыданныйДатаВыставления" + Разделитель +
										"СчетФактураВыданныйВалютаДокументаКод" + Разделитель +
										"СчетФактураВыданныйСумма" + Разделитель +
										"СчетФактураВыданныйСуммаДокумента" + Разделитель +
										"СчетФактураВыданныйСуммаНДС" + Разделитель +
										"СчетФактураВыданныйСуммаНДСДокумента" );
											
		ТекстовыйФайл.ДобавитьСтроку("ПродажаСчет_ШапкаДокумента" + Разделитель +
										"СчетНомер" + Разделитель +
										"СчетДата" + Разделитель +
										"СчетСуммаДокумента" + Разделитель +
										"СчетСуммаНДСДокумента" );
		
		ТекстовыйФайл.ДобавитьСтроку("СчетПродажа_ТЧ_Документа;" + 
									"ТоварНоменклатураАртикул" + Разделитель + 
									"ТоварКоличество" + Разделитель + 
									"ТоварЦена" + Разделитель + 
									"ТоварСумма" + Разделитель + 
									"ТоварСтавкаНДС" + Разделитель + 
									"ТоварСуммаНДС" );
		
		ТекстовыйФайл.ДобавитьСтроку("****************************************************");
		ТекстовыйФайл.ДобавитьСтроку("");
	КонецЕсли;

	Пока Выборка.Следующий() Цикл
		Если НЕ ФормироватьШаблон Тогда
			ТекстовыйФайлПуть = КаталогДляШаблонов + "РТУ_" + СтрЗаменить( СокрЛП(Выборка.Номер), "/", "-") + ".txt";
			ТекстовыйФайл = Новый ТекстовыйДокумент;
		КонецЕсли;
		
		ТекстовыйФайл.ДобавитьСтроку("" + 	Выборка.ШапкаДокумента + Разделитель +
											Выборка.ОрганизацияИНН + Разделитель +
											Выборка.ОбменПоЭДО + Разделитель +
											"ПризнакТорговойПлощадки" + Разделитель +
											"НомерЗаказаТорговойПлощадки" + Разделитель +
											Выборка.Дата + Разделитель +
											СокрЛП(Выборка.Номер) + Разделитель +
											Выборка.СкладКод + Разделитель +
											Выборка.КонтрагентИНН + Разделитель +
											Выборка.КонтрагентКПП + Разделитель +
											СокрЛП(СтрЗаменить(Выборка.КонтрагентКодРС,Символы.НПП,"")) + Разделитель + 
											Выборка.ДоговорКонтрагента + Разделитель +
											Выборка.ДоговорКонтрагентаНомер + Разделитель +
											Выборка.ДоговорКонтрагентаДата + Разделитель +
											Выборка.СуммаВключаетНДС + Разделитель +
											Выборка.ВалютаДокументаКод + Разделитель +
											Выборка.КурсВзаиморасчетов + Разделитель +
											Выборка.ГрузополучательИНН + Разделитель +
											Выборка.ГрузополучательКПП + Разделитель +
											СокрЛП(СтрЗаменить(Выборка.ГрузополучательКодРС,Символы.НПП,"")) );
		Док = Выборка.Ссылка.ПолучитьОбъект();
		Для каждого Товар Из Док.Товары Цикл
			ТекстовыйФайл.ДобавитьСтроку("Продажа_ТЧ_Документа;" + 
										СокрЛП(Товар.Номенклатура.Артикул) + Разделитель + 
										СокрЛП(Товар.Количество) + Разделитель + 
										СокрЛП(СтрЗаменить(Товар.Цена,Символы.НПП,"")) + Разделитель + 
										СокрЛП(СтрЗаменить(Товар.Сумма,Символы.НПП,"")) + Разделитель + 
										СокрЛП(СтрЗаменить(Товар.СтавкаНДС,"%","")) + Разделитель + 
										СокрЛП(СтрЗаменить(Товар.СуммаНДС,Символы.НПП,"")) + Разделитель + 
										СокрЛП(СтрЗаменить(Товар.Сумма,Символы.НПП,"") + СтрЗаменить(Товар.СуммаНДС,Символы.НПП,"")) + Разделитель + 
										//СокрЛП(Товар.РНПТ
										СокрЛП(Товар.НомерГТД) + Разделитель + 
										СокрЛП(Товар.СтранаПроисхождения.Код) + Разделитель + 
										//СокрЛП(Товар.EAN
										//СокрЛП(Товар.ТаможенныйСоюз: 0-нет, 1-да
										СокрЛП(Товар.КодТНВЭД) );
										//СокрЛП(Товар.Вес, кг.;
		КонецЦикла;

		Если ЗначениеЗаполнено( Выборка.СчетФактураВыданныйСсылка ) Тогда
		
			//СчетФактураВыданныйСсылка = Выборка.СчетФактураВыданныйСсылка.ПолучитьОбъект();
			ТекстовыйФайл.ДобавитьСтроку("ПродажаСчетФактураВыданный_ШапкаДокумента" + Разделитель +
												СокрЛП(Выборка.СчетФактураВыданныйНомер) + Разделитель +
												Выборка.СчетФактураВыданныйДата + Разделитель +
												Выборка.СчетФактураВыданныйДатаВыставления + Разделитель +
												Выборка.СчетФактураВыданныйВалютаДокументаКод + Разделитель +
												СтрЗаменить(Выборка.СчетФактураВыданныйСумма,Символы.НПП,"") + Разделитель +
												СтрЗаменить(Выборка.СчетФактураВыданныйСуммаДокумента,Символы.НПП,"") + Разделитель +
												СтрЗаменить(Выборка.СчетФактураВыданныйСуммаНДС,Символы.НПП,"") + Разделитель +
												СтрЗаменить(Выборка.СчетФактураВыданныйСуммаНДСДокумента,Символы.НПП,"") );
		
		КонецЕсли;									
		
		Если ЗначениеЗаполнено( Выборка.СчетНаОплатуПокупателю ) Тогда
		
			Счет = Выборка.СчетНаОплатуПокупателю.ПолучитьОбъект();
			ТекстовыйФайл.ДобавитьСтроку("ПродажаСчет_ШапкаДокумента" + Разделитель +
												Счет.Номер + Разделитель +
												Счет.Дата + Разделитель +
												СтрЗаменить(Счет.СуммаДокумента,Символы.НПП,"") + Разделитель +
												СтрЗаменить(Счет.СуммаНДСДокумента,Символы.НПП,"") );
			Для каждого Товар Из Док.Товары Цикл
				//СчетТЧ_Документа;Артикул товара;Количество ТМЦ;Цена ед.ТМЦ;Сумма;Ставка НДС;Сумма НДС
				ТекстовыйФайл.ДобавитьСтроку("ПродажаСчет_ТЧ_Документа;" + 
											СокрЛП(Товар.Номенклатура.Артикул) + Разделитель + 
											СокрЛП(Товар.Количество) + Разделитель + 
											СокрЛП(СтрЗаменить(Товар.Цена,Символы.НПП,"")) + Разделитель + 
											СокрЛП(СтрЗаменить(Товар.Сумма,Символы.НПП,"")) + Разделитель + 
											СокрЛП(СтрЗаменить(Товар.СтавкаНДС,"%","")) + Разделитель + 
											СокрЛП(СтрЗаменить(Товар.СуммаНДС,Символы.НПП,"")) );
			КонецЦикла;
		
		КонецЕсли;									
		
		Если НЕ ФормироватьШаблон Тогда
			ТекстовыйФайл.ДобавитьСтроку("#");
			ТекстовыйФайл.Записать( ТекстовыйФайлПуть, КодировкаТекста.UTF8, Символы.ВК );
		КонецЕсли;
		
	КонецЦикла;
	
	Если ФормироватьШаблон Тогда
		ТекстовыйФайл.ДобавитьСтроку("#");
		ТекстовыйФайл.Записать( ТекстовыйФайлПуть, КодировкаТекста.UTF8, Символы.ВК );
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура СформироватьПродажи(Команда)
	СформироватьПродажиНаСервере();
КонецПроцедуры

&НаСервере
Процедура СформироватьПоступлениеНаСервере()
	
	#Область Запрос
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПоступлениеТоваровУслуг.Ссылка КАК Ссылка,
		|	""Поступление_ШапкаДокумента"" КАК ШапкаДокумента,
		|	ПоступлениеТоваровУслуг.Ссылка.Организация.ИНН КАК ОрганизацияИНН,
		|	""0"" КАК ОбменПоЭДО,
		|	ПоступлениеТоваровУслуг.Ссылка.Дата КАК Дата,
		|	ПоступлениеТоваровУслуг.Ссылка.Номер КАК Номер,
		|	ПоступлениеТоваровУслуг.Ссылка.НомерВходящегоДокумента КАК НомерВходящегоДокумента,
		|	ПоступлениеТоваровУслуг.Ссылка.Склад.Код КАК СкладКод,
		|	ПоступлениеТоваровУслуг.Ссылка.Контрагент.ИНН КАК КонтрагентИНН,
		|	ПоступлениеТоваровУслуг.Ссылка.Контрагент.КПП КАК КонтрагентКПП,
		|	КонтрагентыДополнительныеРеквизитыКонтрагент.Значение КАК КонтрагентКодРС,
		|	ПоступлениеТоваровУслуг.Ссылка.ДоговорКонтрагента КАК ДоговорКонтрагента,
		|	ПоступлениеТоваровУслуг.Ссылка.ДоговорКонтрагента.Номер КАК ДоговорКонтрагентаНомер,
		|	ПоступлениеТоваровУслуг.Ссылка.ДоговорКонтрагента.Дата КАК ДоговорКонтрагентаДата,
		|	ВЫБОР
		|		КОГДА ПоступлениеТоваровУслуг.Ссылка.СуммаВключаетНДС
		|			ТОГДА ""Истина""
		|		ИНАЧЕ ""Ложь""
		|	КОНЕЦ КАК СуммаВключаетНДС,
		|	ПоступлениеТоваровУслуг.Ссылка.ВалютаДокумента.Код КАК ВалютаДокументаКод,
		|	ПоступлениеТоваровУслуг.Ссылка.КурсВзаиморасчетов КАК КурсВзаиморасчетов,
		|	ВЫБОР
		|		КОГДА ПоступлениеТоваровУслуг.Ссылка.Грузополучатель.ИНН = """"
		|			ТОГДА """"
		|		ИНАЧЕ ПоступлениеТоваровУслуг.Ссылка.Грузополучатель.ИНН
		|	КОНЕЦ КАК ГрузополучательИНН,
		|	ПоступлениеТоваровУслуг.Ссылка.Грузополучатель.КПП КАК ГрузополучательКПП,
		|	КонтрагентыДополнительныеРеквизитыГрузополучатель.Значение КАК ГрузополучательКодРС,
		|	ПоступлениеТоваровУслуг.Ссылка.Грузополучатель.РегистрационныйНомер КАК СсылкаГрузополучательРегистрационныйНомер,
		|	СчетФактураПолученный.Ссылка КАК СчетФактураПолученныйСсылка,
		|	СчетФактураПолученный.Номер КАК СчетФактураПолученныйНомер,
		|	СчетФактураПолученный.Дата КАК СчетФактураПолученныйДата,
		|	СчетФактураПолученный.Организация.ИНН КАК СчетФактураПолученныйОрганизацияИНН,
		|	СчетФактураПолученный.Организация.КПП КАК СчетФактураПолученныйОрганизацияКПП,
		|	СчетФактураПолученный.Контрагент.ИНН КАК СчетФактураПолученныйКонтрагентИНН,
		|	СчетФактураПолученный.Контрагент.КПП КАК СчетФактураПолученныйКонтрагентКПП,
		|	СчетФактураПолученный.ДоговорКонтрагента.Номер КАК СчетФактураПолученныйДоговорКонтрагентаНомер,
		|	СчетФактураПолученный.ВалютаДокумента.Код КАК СчетФактураПолученныйВалютаДокументаКод,
		|	СчетФактураПолученный.НомерВходящегоДокумента КАК СчетФактураПолученныйНомерВходящегоДокумента,
		|	СчетФактураПолученный.ДатаВходящегоДокумента КАК ДатаВходящегоДокумента,
		|	СчетФактураПолученный.КодВидаОперации КАК КодВидаОперации,
		|	СчетФактураПолученный.КодСпособаПолучения КАК КодСпособаПолучения,
		|	СчетФактураПолученный.СуммаДокумента КАК СуммаДокумента,
		|	СчетФактураПолученный.СуммаУвеличение КАК СуммаУвеличение,
		|	СчетФактураПолученный.СуммаУменьшение КАК СуммаУменьшение,
		|	СчетФактураПолученный.СуммаНДСДокумента КАК СуммаНДСДокумента,
		|	СчетФактураПолученный.СуммаНДСУвеличение КАК СуммаНДСУвеличение,
		|	СчетФактураПолученный.СуммаНДСУменьшение КАК СуммаНДСУменьшение,
		|	СчетФактураПолученный.СчетФактураБезНДС КАК СчетФактураБезНДС,
		|	СчетФактураПолученный.ВидСчетаФактуры КАК ВидСчетаФактуры,
		|	СчетФактураПолученный.НДСПредъявленКВычету КАК НДСПредъявленКВычету
		|ИЗ
		|	Документ.ПоступлениеТоваровУслуг КАК ПоступлениеТоваровУслуг
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураПолученный КАК СчетФактураПолученный
		|		ПО (СчетФактураПолученный.ДокументОснование = ПоступлениеТоваровУслуг.Ссылка)
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты.ДополнительныеРеквизиты КАК КонтрагентыДополнительныеРеквизитыКонтрагент
		|		ПО (КонтрагентыДополнительныеРеквизитыКонтрагент.Ссылка = ПоступлениеТоваровУслуг.Контрагент.Ссылка И КонтрагентыДополнительныеРеквизитыКонтрагент.Свойство.Имя = &Свойство )
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты.ДополнительныеРеквизиты КАК КонтрагентыДополнительныеРеквизитыГрузополучатель
		|		ПО (КонтрагентыДополнительныеРеквизитыГрузополучатель.Ссылка = ПоступлениеТоваровУслуг.Грузополучатель.Ссылка И КонтрагентыДополнительныеРеквизитыГрузополучатель.Свойство.Имя = &Свойство )
		
		|ГДЕ
		|	ПоступлениеТоваровУслуг.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеТоваровУслуг.Товары)
		|	И ПоступлениеТоваровУслуг.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания";
		//|	И ПоступлениеТоваровУслуг.Номер = &Номер";
	
	Запрос.УстановитьПараметр("Номер", "32180Л21");
	Запрос.УстановитьПараметр("ДатаНачала", ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания", ДатаОкончания);
	Запрос.УстановитьПараметр("Свойство", "КодРС_Контрагент");
	#КонецОбласти
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Если ФормироватьШаблон Тогда
		ТекстовыйФайлПуть = КаталогДляШаблонов + "ПТУ.txt";
		ТекстовыйФайл = Новый ТекстовыйДокумент;
		
		ТекстовыйФайл.ДобавитьСтроку("****************************************************");
		ТекстовыйФайл.ДобавитьСтроку("СТРУКТУРА ДОКУМЕНТА ПРОДАЖИ - ПоступлениеТоваровУслуг");
		ТекстовыйФайл.ДобавитьСтроку("****************************************************");
		ТекстовыйФайл.ДобавитьСтроку(		"Поступление_ШапкаДокумента" + Разделитель +
											"ОрганизацияИНН" + Разделитель +
											"ОбменПоЭДО" + Разделитель +
											"Дата" + Разделитель +
											"Номер" + Разделитель +
											"НомерВходящегоДокумента" + Разделитель +
											"СкладКод" + Разделитель +
											"КонтрагентИНН" + Разделитель +
											"КонтрагентКПП" + Разделитель +
											"КонтрагентКодРС" + Разделитель +
											"ДоговорКонтрагента" + Разделитель +
											"ДоговорКонтрагентаНомер" + Разделитель +
											"ДоговорКонтрагентаДата" + Разделитель +
											"СуммаВключаетНДС" + Разделитель +
											"ВалютаДокументаКод" + Разделитель +
											"КурсВзаиморасчетов" + Разделитель +
											"ГрузополучательИНН" + Разделитель +
											"ГрузополучательКПП" + Разделитель +
											"ГрузополучательКодРС" );
		ТекстовыйФайл.ДобавитьСтроку("Поступление_ТЧ_Документа;" + 
									"ТоварАртикул" + Разделитель + 
									"ТоварКоличество" + Разделитель + 
									"ТоварЦена" + Разделитель + 
									"ТоварСумма" + Разделитель + 
									"ТоварСтавкаНДС" + Разделитель + 
									"ТоварСуммаНДС" + Разделитель + 
									"ТоварВсего" + Разделитель + 
									"ТоварНомерГТД" + Разделитель + 
									"ТоварСтранаПроисхожденияКод" + Разделитель + 
									"ТоварКодТНВЭД" );
									
		ТекстовыйФайл.ДобавитьСтроку("Поступление_СчетФактураПолученный;" + 
									"СчетФактураПолученныйНомер" + Разделитель + 
									"СчетФактураПолученныйДата" + Разделитель + 
									"СчетФактураПолученныйНомерВходящегоДокумента" + Разделитель + 
									"СчетФактураПолученныйДатаВходящегоДокумента" + Разделитель + 
									"СчетФактураПолученныйКодВидаОперации" + Разделитель + 
									"СчетФактураПолученныйКодСпособаПолучения" + Разделитель + 
									"СчетФактураПолученныйСуммаДокумента" + Разделитель + 
									"СчетФактураПолученныйСуммаУвеличение" + Разделитель + 
									"СчетФактураПолученныйСуммаУменьшение" + Разделитель + 
									"СчетФактураПолученныйСуммаНДСДокумента" + Разделитель + 
									"СчетФактураПолученныйСуммаНДСУвеличение" + Разделитель + 
									"СчетФактураПолученныйСуммаНДСУменьшение" + Разделитель + 
									"СчетФактураПолученныйСчетФактураБезНДС" + Разделитель + 
									"СчетФактураПолученныйВидСчетаФактуры" + Разделитель + 
									"СчетФактураПолученныйНДСПредъявленКВычету" );
									
		ТекстовыйФайл.ДобавитьСтроку("****************************************************");
		ТекстовыйФайл.ДобавитьСтроку("");
	КонецЕсли;
	
	Пока Выборка.Следующий() Цикл
		Если НЕ ФормироватьШаблон Тогда
			ТекстовыйФайл = Новый ТекстовыйДокумент;
			ТекстовыйФайлПуть = КаталогДляШаблонов + "ПТУ_" + СтрЗаменить( СокрЛП(Выборка.Номер), "/", "-") + ".txt";
		КонецЕсли;
		
		ТекстовыйФайл.ДобавитьСтроку("" + 	Выборка.ШапкаДокумента + Разделитель +
											Выборка.ОрганизацияИНН + Разделитель +
											Выборка.ОбменПоЭДО + Разделитель +
											Выборка.Дата + Разделитель +
											СокрЛП(Выборка.Номер) + Разделитель +
											Выборка.СкладКод + Разделитель +
											Выборка.КонтрагентИНН + Разделитель +
											Выборка.КонтрагентКПП + Разделитель +
											Выборка.КонтрагентКодРС + Разделитель +
											Выборка.ДоговорКонтрагента + Разделитель +
											Выборка.ДоговорКонтрагентаНомер + Разделитель +
											Выборка.ДоговорКонтрагентаДата + Разделитель +
											Выборка.СуммаВключаетНДС + Разделитель +
											Выборка.ВалютаДокументаКод + Разделитель +
											Выборка.КурсВзаиморасчетов + Разделитель +
											Выборка.ГрузополучательИНН + Разделитель +
											Выборка.ГрузополучательКПП + Разделитель +
											Выборка.ГрузополучательКодРС + Разделитель +
											СокрЛП(Выборка.НомерВходящегоДокумента) );
		ДокОсновной = Выборка.Ссылка.ПолучитьОбъект();
		Для каждого Товар Из ДокОсновной.Товары Цикл
			ТекстовыйФайл.ДобавитьСтроку("Поступление_ТЧ_Документа;" + 
										СокрЛП(Товар.Номенклатура.Артикул) + Разделитель + 
										СокрЛП(Товар.Количество) + Разделитель + 
										СокрЛП(СтрЗаменить(Товар.Цена,Символы.НПП,"")) + Разделитель + 
										СокрЛП(СтрЗаменить(Товар.Сумма,Символы.НПП,"")) + Разделитель + 
										СокрЛП(СтрЗаменить(Товар.СтавкаНДС,"%","")) + Разделитель + 
										СокрЛП(СтрЗаменить(Товар.СуммаНДС,Символы.НПП,"")) + Разделитель + 
										СокрЛП(СтрЗаменить(Товар.Сумма,Символы.НПП,"") + СтрЗаменить(Товар.СуммаНДС,Символы.НПП,"")) + Разделитель + 
										СокрЛП(Товар.НомерГТД) + Разделитель + 
										СокрЛП(Товар.СтранаПроисхождения.Код) );
		КонецЦикла;

		Если ЗначениеЗаполнено( Выборка.СчетФактураПолученныйСсылка ) Тогда
			Док = Выборка.СчетФактураПолученныйСсылка.ПолучитьОбъект();
			ТекстовыйФайл.ДобавитьСтроку("Поступление_СчетФактураПолученный;" + 
										СокрЛП(Док.Номер) + Разделитель + 
										Док.Дата + Разделитель + 
										Док.НомерВходящегоДокумента + Разделитель + 
										Док.ДатаВходящегоДокумента + Разделитель + 
										Док.КодВидаОперации + Разделитель + 
										Док.КодСпособаПолучения + Разделитель + 
										СокрЛП( СтрЗаменить( Док.СуммаДокумента, Символы.НПП, ""))  + Разделитель + 
										СокрЛП( СтрЗаменить( Док.СуммаУвеличение, Символы.НПП, "")) + Разделитель + 
										СокрЛП( СтрЗаменить( Док.СуммаУменьшение, Символы.НПП, "")) + Разделитель + 
										СокрЛП( СтрЗаменить( Док.СуммаНДСДокумента, Символы.НПП, "")) + Разделитель + 
										СокрЛП( СтрЗаменить( Док.СуммаНДСУвеличение, Символы.НПП, "")) + Разделитель + 
										СокрЛП( СтрЗаменить( Док.СуммаНДСУменьшение, Символы.НПП, "")) + Разделитель + 
										?(Док.СчетФактураБезНДС, "Истина", "Ложь") + Разделитель + 
										Док.ВидСчетаФактуры + Разделитель + 
										?(Док.НДСПредъявленКВычету, "Истина", "Ложь") );
		КонецЕсли;
									
		Если НЕ ФормироватьШаблон Тогда
			ТекстовыйФайл.ДобавитьСтроку("#");
			ТекстовыйФайл.Записать( ТекстовыйФайлПуть, КодировкаТекста.UTF8, Символы.ВК );
		КонецЕсли;
		
	КонецЦикла;
	
	Если ФормироватьШаблон Тогда
		ТекстовыйФайл.ДобавитьСтроку("#");
		ТекстовыйФайл.Записать( ТекстовыйФайлПуть, КодировкаТекста.UTF8, Символы.ВК );
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура СформироватьПоступление(Команда)
	СформироватьПоступлениеНаСервере();
КонецПроцедуры

&НаСервере
Процедура СформироватьВозвратНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 10
		|	""Возврат_Продажа_ШапкаДокумента"" КАК ШапкаДокумента,
		|	ВозвратТоваровОтПокупателя.Ссылка КАК Ссылка,
		|	ВозвратТоваровОтПокупателя.Ссылка.Организация.ИНН КАК ОрганизацияИНН,
		|	ВЫБОР
		|		КОГДА ВозвратТоваровОтПокупателя.Ссылка.ЭтоУниверсальныйДокумент
		|			ТОГДА ""Истина""
		|		ИНАЧЕ ""Ложь""
		|	КОНЕЦ КАК ОбменПоЭДО,
		|	ВозвратТоваровОтПокупателя.Ссылка.Дата КАК Дата,
		|	ВозвратТоваровОтПокупателя.Ссылка.Номер КАК Номер,
		|	ВозвратТоваровОтПокупателя.Ссылка.Склад.Код КАК СкладКод,
		|	ВозвратТоваровОтПокупателя.Ссылка.Контрагент.ИНН КАК КонтрагентИНН,
		|	ВозвратТоваровОтПокупателя.Ссылка.Контрагент.КПП КАК КонтрагентКПП,
		|	КонтрагентыДополнительныеРеквизитыКонтрагент.Значение КАК КонтрагентКодРС,
		|	ВозвратТоваровОтПокупателя.Ссылка.ДоговорКонтрагента КАК ДоговорКонтрагента,
		|	ВозвратТоваровОтПокупателя.Ссылка.ДоговорКонтрагента.Номер КАК ДоговорКонтрагентаНомер,
		|	ВозвратТоваровОтПокупателя.Ссылка.ДоговорКонтрагента.Дата КАК ДоговорКонтрагентаДата,
		|	ВозвратТоваровОтПокупателя.Ссылка.Сделка.Номер КАК НакладнаяНомер,
		|	ВозвратТоваровОтПокупателя.Ссылка.Сделка.Дата КАК НакладнаяДата,
		|	ВозвратТоваровОтПокупателя.Ссылка.ВидОперации КАК ВидОперации,
		|	ВЫБОР
		|		КОГДА ВозвратТоваровОтПокупателя.Ссылка.ОтразитьВКнигеПокупок
		|			ТОГДА ""Истина""
		|		ИНАЧЕ ""Ложь""
		|	КОНЕЦ КАК ОтразитьВКнигеПокупок,
		|	ВЫБОР
		|		КОГДА ВозвратТоваровОтПокупателя.Ссылка.ПокупателюВыставляетсяКорректировочныйСчетФактура
		|			ТОГДА ""Истина""
		|		ИНАЧЕ ""Ложь""
		|	КОНЕЦ КАК ПокупателюВыставляетсяКорректировочныйСчетФактура,
		|	ВозвратТоваровОтПокупателя.Ссылка.ПодразделениеОрганизации.Код КАК ПодразделениеОрганизацииКод,
		|	ВозвратТоваровОтПокупателя.Ссылка.ТипЦен КАК ТипЦен,
		|	ВЫБОР
		|		КОГДА ВозвратТоваровОтПокупателя.Ссылка.СуммаВключаетНДС
		|			ТОГДА ""Истина""
		|		ИНАЧЕ ""Ложь""
		|	КОНЕЦ КАК СуммаВключаетНДС,
		|	ВозвратТоваровОтПокупателя.Ссылка.СуммаДокумента КАК СуммаДокумента,
		|	ВозвратТоваровОтПокупателя.Ссылка.ВалютаДокумента.Код КАК ВалютаДокументаКод,
		|	ВозвратТоваровОтПокупателя.Ссылка.КурсВзаиморасчетов КАК КурсВзаиморасчетов,
		|	ВозвратТоваровОтПокупателя.Ссылка.КратностьВзаиморасчетов КАК КратностьВзаиморасчетов
		|ИЗ
		|	Документ.ВозвратТоваровОтПокупателя КАК ВозвратТоваровОтПокупателя
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты.ДополнительныеРеквизиты КАК КонтрагентыДополнительныеРеквизитыКонтрагент
		|		ПО (КонтрагентыДополнительныеРеквизитыКонтрагент.Ссылка = ВозвратТоваровОтПокупателя.Контрагент.Ссылка И КонтрагентыДополнительныеРеквизитыКонтрагент.Свойство.Имя = &Свойство )
		|ГДЕ
		|	ВозвратТоваровОтПокупателя.Ссылка.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
		|	И ВозвратТоваровОтПокупателя.Ссылка.Проведен";
	
	Запрос.УстановитьПараметр("ДатаНачала", ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания", ДатаОкончания);
	Запрос.УстановитьПараметр("Свойство", "КодРС_Контрагент");
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Если ФормироватьШаблон Тогда
		ТекстовыйФайлПуть = КаталогДляШаблонов + "Возврат.txt";
		ТекстовыйФайл = Новый ТекстовыйДокумент;
	
		ТекстовыйФайл.ДобавитьСтроку("****************************************************");
		ТекстовыйФайл.ДобавитьСтроку("СТРУКТУРА ДОКУМЕНТА ВОЗВРАТ ОТ ПОКУПАТЕЛЯ - ВозвратТоваровОтПокупателя");
		ТекстовыйФайл.ДобавитьСтроку("****************************************************");
		ТекстовыйФайл.ДобавитьСтроку(	"Возврат_Продажа_ШапкаДокумента" + Разделитель +
										"ОрганизацияИНН" + Разделитель +
										"ОбменПоЭДО" + Разделитель +
										"Дата" + Разделитель +
										"Номер" + Разделитель +
										"СкладКод" + Разделитель +	
										"КонтрагентИНН" + Разделитель +
										"КонтрагентКПП" + Разделитель +
										"КонтрагентКодРС" + Разделитель +
										"ДоговорКонтрагента" + Разделитель +
										"ДоговорКонтрагентаНомер" + Разделитель +
										"ДоговорКонтрагентаДата" + Разделитель +
										"СуммаВключаетНДС" + Разделитель +
										"СуммаДокумента" + Разделитель +
										"ВалютаДокументаКод" + Разделитель +
										"КурсВзаиморасчетов" + Разделитель +
										"КратностьВзаиморасчетов" + Разделитель +
										"ОтразитьВКнигеПокупок" + Разделитель +
										"ПокупателюВыставляетсяКорректировочныйСчетФактура" + Разделитель +
										"ПодразделениеОрганизацииКод" + Разделитель +
										"ТипЦен" + Разделитель +
										"НакладнаяНомер" + Разделитель +
										"НакладнаяДата" );
		ТекстовыйФайл.ДобавитьСтроку(	"Возврат_Продажа_ТЧ_Документа" + Разделитель +
										"НоменклатураАртикул" + Разделитель +
										"Количество" + Разделитель +
										"Цена" + Разделитель +
										"Сумма" + Разделитель +
										"СтавкаНДС" + Разделитель +
										"СуммаНДС" + Разделитель +
										"Себестоимость" + Разделитель +
										"НомерГТД" + Разделитель +
										"СтранаПроисхожденияКод" + Разделитель +
										"КодТНВЭД" + Разделитель +
										"СчетУчета" + Разделитель +
										"ПереданныеСчетУчета" + Разделитель +
										"СчетДоходов" + Разделитель +
										"СчетРасходов" + Разделитель +
										"СчетУчетаНДСПоРеализации" + Разделитель +
										"СпособУчетаНДС" + Разделитель +
										"КоличествоПослеИзменения" + Разделитель +
										"СуммаПослеИзменения" + Разделитель +
										"СуммаНДСПослеИзменения" + Разделитель +
										"ИсправляемыйДокументНомер" + Разделитель +
										"ИсправляемыйДокументДата" );

		ТекстовыйФайл.ДобавитьСтроку("****************************************************");
		ТекстовыйФайл.ДобавитьСтроку("");
	КонецЕсли;

	Пока Выборка.Следующий() Цикл
		Если НЕ ФормироватьШаблон Тогда
			ТекстовыйФайл = Новый ТекстовыйДокумент;
			ТекстовыйФайлПуть = КаталогДляШаблонов + "Возврат_" + СтрЗаменить( СокрЛП(Выборка.Номер), "/", "-") + ".txt";
		КонецЕсли;
		
		ТекстовыйФайл.ДобавитьСтроку("" + 	Выборка.ШапкаДокумента + Разделитель +
											Выборка.ОрганизацияИНН + Разделитель +
											Выборка.ОбменПоЭДО + Разделитель +
											Выборка.Дата + Разделитель +
											СокрЛП(Выборка.Номер) + Разделитель +
											Выборка.СкладКод + Разделитель +
											Выборка.КонтрагентИНН + Разделитель +
											Выборка.КонтрагентКПП + Разделитель +
											Выборка.КонтрагентКодРС + Разделитель +
											Выборка.ДоговорКонтрагента + Разделитель +
											СокрЛП(Выборка.ДоговорКонтрагентаНомер) + Разделитель +
											Выборка.ДоговорКонтрагентаДата + Разделитель +
											
											Выборка.СуммаВключаетНДС + Разделитель +
											СокрЛП(СтрЗаменить(Выборка.СуммаДокумента,Символы.НПП,"")) + Разделитель +
											Выборка.ВалютаДокументаКод + Разделитель +
											Выборка.КурсВзаиморасчетов + Разделитель +
											Выборка.КратностьВзаиморасчетов + Разделитель +
											
											СокрЛП(Выборка.НакладнаяНомер) + Разделитель +
											Выборка.НакладнаяДата + Разделитель +
											Выборка.ОтразитьВКнигеПокупок + Разделитель +
											Выборка.ПокупателюВыставляетсяКорректировочныйСчетФактура + Разделитель +
											Выборка.ПодразделениеОрганизацииКод + Разделитель +
											Выборка.ТипЦен );
											
		Док = Выборка.Ссылка.ПолучитьОбъект();
		Для каждого Товар Из Док.Товары Цикл
			ТекстовыйФайл.ДобавитьСтроку("Возврат_Продажа_ТЧ_Документа;" + 
										СокрЛП(Товар.Номенклатура.Артикул) + Разделитель + 
										СокрЛП(Товар.Количество) + Разделитель + 
										СокрЛП(СтрЗаменить(Товар.Цена,Символы.НПП,"")) + Разделитель + 
										СокрЛП(СтрЗаменить(Товар.Сумма,Символы.НПП,"")) + Разделитель + 
										СокрЛП(СтрЗаменить(Товар.СтавкаНДС,"%","")) + Разделитель + 
										СокрЛП(СтрЗаменить(Товар.СуммаНДС,Символы.НПП,"")) + Разделитель + 
										СокрЛП(СтрЗаменить(Товар.Себестоимость,Символы.НПП,"")) + Разделитель + 
										
										СокрЛП(Товар.НомерГТД) + Разделитель + 
										СокрЛП(Товар.СтранаПроисхождения.Код) + Разделитель + 
										СокрЛП(Товар.КодТНВЭД) + Разделитель + 

										Товар.СчетУчета + Разделитель +
										Товар.ПереданныеСчетУчета + Разделитель +
										Товар.СчетДоходов + Разделитель +
										Товар.СчетРасходов + Разделитель +
										Товар.СчетУчетаНДСПоРеализации + Разделитель +
										Товар.СпособУчетаНДС + Разделитель +
										Товар.КоличествоПослеИзменения + Разделитель +
										Товар.СуммаПослеИзменения + Разделитель +
										Товар.СуммаНДСПослеИзменения + Разделитель +
										СокрЛП(Товар.ИсправляемыйДокумент.Номер) + Разделитель +
										Товар.ИсправляемыйДокумент.Дата );
		КонецЦикла;

		Если НЕ ФормироватьШаблон Тогда
			ТекстовыйФайл.ДобавитьСтроку("#");
			ТекстовыйФайл.Записать( ТекстовыйФайлПуть, КодировкаТекста.UTF8, Символы.ВК );
		КонецЕсли;
	
	КонецЦикла;
	
	Если ФормироватьШаблон Тогда
		ТекстовыйФайл.ДобавитьСтроку("#");
		ТекстовыйФайл.Записать( ТекстовыйФайлПуть, КодировкаТекста.UTF8, Символы.ВК );
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура СформироватьВозврат(Команда)
	СформироватьВозвратНаСервере();
КонецПроцедуры

&НаСервере
Процедура СформироватьТребованиеНакладнаяНаСервере()

	#Область Запрос
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТребованиеНакладная.Ссылка КАК Ссылка,
		|	""ТребованиеНакладная_ШапкаДокумента"" КАК ШапкаДокумента,
		|	ТребованиеНакладная.Организация.ИНН КАК ОрганизацияИНН,
		|	""ОбменПоЭДО"" КАК ОбменПоЭДО,
		|	ТребованиеНакладная.Номер КАК Номер,
		|	ТребованиеНакладная.Дата КАК Дата,
		|	СкладыДополнительныеРеквизиты.Значение КАК СкладКод,
		|	ТребованиеНакладная.СчетЗатрат КАК СчетЗатрат,
		|	ТребованиеНакладная.Субконто1 КАК Субконто1,
		|	ТребованиеНакладная.Субконто2 КАК Субконто2,
		|	ТребованиеНакладная.Субконто3.Артикул КАК Субконто3Артикул,
		|	ТребованиеНакладная.Комментарий КАК Комментарий
		|ИЗ
		|	Документ.ТребованиеНакладная КАК ТребованиеНакладная
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады.ДополнительныеРеквизиты КАК СкладыДополнительныеРеквизиты
		|		ПО (ТребованиеНакладная.Ссылка.Склад = СкладыДополнительныеРеквизиты.Ссылка
		|			И СкладыДополнительныеРеквизиты.Свойство.Имя = &Свойство)
		|ГДЕ
		|	ТребованиеНакладная.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
		|	И ТребованиеНакладная.Проведен";
	#КонецОбласти
	
	Запрос.УстановитьПараметр("ДатаНачала", ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания", ДатаОкончания);
	Запрос.УстановитьПараметр("Свойство", "КодРС_Склады");
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Если ФормироватьШаблон Тогда
		ТекстовыйФайлПуть = КаталогДляШаблонов + "ТребованиеНакладная.txt";
		ТекстовыйФайл = Новый ТекстовыйДокумент;
	
		ТекстовыйФайл.ДобавитьСтроку("****************************************************");
		ТекстовыйФайл.ДобавитьСтроку("СТРУКТУРА ДОКУМЕНТА Требование Накладная - ТребованиеНакладная");
		ТекстовыйФайл.ДобавитьСтроку("****************************************************");
		ТекстовыйФайл.ДобавитьСтроку(	"ТребованиеНакладная_ШапкаДокумента" + Разделитель +
										"ОрганизацияИНН" + Разделитель +
										"ОбменПоЭДО" + Разделитель +
										"Дата" + Разделитель +
										"Номер" + Разделитель +
										"СкладКод" + Разделитель +
										"СчетЗатрат" + Разделитель +
										"Субконто1" + Разделитель +
										"Субконто2" + Разделитель +
										"Субконто3" + Разделитель +
										"Комментарий" );
		ТекстовыйФайл.ДобавитьСтроку(	"ТребованиеНакладная_ТЧ_Документа" + Разделитель +
										"НоменклатураАртикул" + Разделитель +
										"Количество" + Разделитель +
										//"Счет" + Разделитель +
										"ОтражениеВУСН" + Разделитель +
										"НомерГТД" + Разделитель +
										"СтранаПроисхожденияКод" + Разделитель +
										"Коэффициент" + Разделитель +
										"ПрослеживаемыйТовар" );

		ТекстовыйФайл.ДобавитьСтроку("****************************************************");
		ТекстовыйФайл.ДобавитьСтроку("");
	КонецЕсли;
	
	Пока Выборка.Следующий() Цикл
		Если НЕ ФормироватьШаблон Тогда
			ТекстовыйФайлПуть = КаталогДляШаблонов + "ТребованиеНакладная_" + СтрЗаменить( СокрЛП(Выборка.Номер), "/", "-") + ".txt";
			ТекстовыйФайл = Новый ТекстовыйДокумент;
		КонецЕсли;
		
		ТекстовыйФайл.ДобавитьСтроку("" + 	Выборка.ШапкаДокумента + Разделитель +
											Выборка.ОрганизацияИНН + Разделитель +
											Выборка.ОбменПоЭДО + Разделитель +
											Выборка.Дата + Разделитель +
											СокрЛП(Выборка.Номер) + Разделитель +
											Выборка.СкладКод + Разделитель +
											Выборка.СчетЗатрат + Разделитель +
											Выборка.Субконто1 + Разделитель +
											Выборка.Субконто2 + Разделитель +
											Выборка.Субконто3Артикул + Разделитель +
											Выборка.Комментарий );
											
		Док = Выборка.Ссылка.ПолучитьОбъект();
		Для каждого Товар Из Док.Материалы Цикл
			ТекстовыйФайл.ДобавитьСтроку("ТребованиеНакладная_ТЧ_Документа;" + 
										СокрЛП(Товар.Номенклатура.Артикул) + Разделитель + 
										СокрЛП(Товар.Количество) + Разделитель + 
										//Товар.Счет + Разделитель + 
										Товар.ОтражениеВУСН + Разделитель + 
										Товар.НомерГТД + Разделитель + 
										Товар.СтранаПроисхождения + Разделитель + 
										Товар.Коэффициент + Разделитель + 
										Товар.ПрослеживаемыйТовар );
		КонецЦикла;

		Если НЕ ФормироватьШаблон Тогда
			ТекстовыйФайл.ДобавитьСтроку("#");
			ТекстовыйФайл.Записать( ТекстовыйФайлПуть, КодировкаТекста.UTF8, Символы.ВК );
		КонецЕсли;
		
	КонецЦикла;
	
	Если ФормироватьШаблон Тогда
		ТекстовыйФайл.ДобавитьСтроку("#");
		ТекстовыйФайл.Записать( ТекстовыйФайлПуть, КодировкаТекста.UTF8, Символы.ВК );
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура СформироватьТребованиеНакладная(Команда)
	СформироватьТребованиеНакладнаяНаСервере();
КонецПроцедуры

&НаСервере
Процедура СформироватьПеремещениеНаСервере()

	#Область Запрос
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	""ПеремещениеТоваров_ШапкаДокумента"" КАК ШапкаДокумента,
		|	ПеремещениеТоваров.Организация.ИНН КАК ОрганизацияИНН,
		|	""0"" КАК ОбменПоЭДО,
		|	ПеремещениеТоваров.Дата КАК Дата,
		|	ПеремещениеТоваров.Номер КАК Номер,
		|	СкладыДополнительныеРеквизитыОтправитель.Значение КАК СкладОтправительКод,
		|	СкладыДополнительныеРеквизитыПолучатель.Значение КАК СкладПолучательКод,
		|	ПеремещениеТоваров.ПодразделениеОтправитель.Код КАК ПодразделениеОтправительКод,
		|	ПеремещениеТоваров.ПодразделениеПолучатель.Код КАК ПодразделениеПолучательКод,
		|	ПеремещениеТоваров.НДСвСтоимостиТоваров КАК НДСвСтоимостиТоваров,
		|	ПеремещениеТоваров.СчетСписанияНДС КАК СчетСписанияНДС,
		|	ПеремещениеТоваров.СубконтоСписанияНДС1 КАК СубконтоСписанияНДС1,
		|	ПеремещениеТоваров.СубконтоСписанияНДС2 КАК СубконтоСписанияНДС2,
		|	ПеремещениеТоваров.СубконтоСписанияНДС3 КАК СубконтоСписанияНДС3,
		|	ПеремещениеТоваров.Комментарий КАК Комментарий,
		|	ПеремещениеТоваров.Ссылка КАК Ссылка
		|ИЗ
		|	Документ.ПеремещениеТоваров КАК ПеремещениеТоваров
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады.ДополнительныеРеквизиты КАК СкладыДополнительныеРеквизитыОтправитель
		|		ПО ПеремещениеТоваров.СкладОтправитель.Ссылка = СкладыДополнительныеРеквизитыОтправитель.Ссылка
		|			И (СкладыДополнительныеРеквизитыОтправитель.Свойство.Имя = &Свойство)
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады.ДополнительныеРеквизиты КАК СкладыДополнительныеРеквизитыПолучатель
		|		ПО ПеремещениеТоваров.СкладПолучатель.Ссылка = СкладыДополнительныеРеквизитыПолучатель.Ссылка
		|			И (СкладыДополнительныеРеквизитыПолучатель.Свойство.Имя = &Свойство)
		|ГДЕ
		|	ПеремещениеТоваров.Ссылка.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
		|	И ПеремещениеТоваров.Проведен";
	#КонецОбласти
	
	Запрос.УстановитьПараметр("ДатаНачала", ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания", ДатаОкончания);
	Запрос.УстановитьПараметр("Свойство", "КодРС_Склады");
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Если ФормироватьШаблон Тогда
		ТекстовыйФайлПуть = КаталогДляШаблонов + "ПеремещениеТоваров.txt";
		ТекстовыйФайл = Новый ТекстовыйДокумент;
	
		ТекстовыйФайл.ДобавитьСтроку("****************************************************");
		ТекстовыйФайл.ДобавитьСтроку("СТРУКТУРА ДОКУМЕНТА ПЕРЕЩЕНИЕ ТОВАРОВ - ПеремещениеТоваров");
		ТекстовыйФайл.ДобавитьСтроку("****************************************************");
		ТекстовыйФайл.ДобавитьСтроку(	"ПеремещениеТоваров_ШапкаДокумента" + Разделитель +
										"ОрганизацияИНН" + Разделитель +
										"ОбменПоЭДО" + Разделитель +
										"Дата" + Разделитель +
										"Номер" + Разделитель +
										"СкладОтправительКод" + Разделитель +
										"СкладПолучательКод" + Разделитель +
										"ПодразделениеОтправительКод" + Разделитель +
										"ПодразделениеПолучательКод" + Разделитель +
										"НДСвСтоимостиТоваров" + Разделитель +
										"СчетСписанияНДС" + Разделитель +
										"СубконтоСписанияНДС1" + Разделитель +
										"СубконтоСписанияНДС2" + Разделитель +
										"СубконтоСписанияНДС3" + Разделитель +
										"Комментарий" );
		
		ТекстовыйФайл.ДобавитьСтроку(	"ПеремещениеТоваров_ТЧ_Документа" + Разделитель +
										"НоменклатураАртикул" + Разделитель +
										"КоличествоМест" + Разделитель +
										"ЕдиницаИзмеренияКод" + Разделитель +
										"Коэффициент" + Разделитель +
										"Количество" + Разделитель +
										"Цена" + Разделитель +
										"ЦенаВРознице" + Разделитель +
										"СуммаВРознице" + Разделитель +
										"СтавкаНДСВРознице" + Разделитель +
										"ДокументОприходования" + Разделитель +
										"Себестоимость" + Разделитель +
										"СпособУчетаНДС" );

		ТекстовыйФайл.ДобавитьСтроку("****************************************************");
		ТекстовыйФайл.ДобавитьСтроку("");
	КонецЕсли;
	
	Пока Выборка.Следующий() Цикл
		Если НЕ ФормироватьШаблон Тогда
			ТекстовыйФайлПуть = КаталогДляШаблонов + "ПеремещениеТоваров_" + СтрЗаменить( СокрЛП(Выборка.Номер), "/", "-") + ".txt";
			ТекстовыйФайл = Новый ТекстовыйДокумент;
		КонецЕсли;
		
		ТекстовыйФайл.ДобавитьСтроку("" + 	Выборка.ШапкаДокумента + Разделитель +
											Выборка.ОрганизацияИНН + Разделитель +
											Выборка.ОбменПоЭДО + Разделитель +
											Выборка.Дата + Разделитель +
											СокрЛП(Выборка.Номер) + Разделитель +
											Выборка.СкладОтправительКод + Разделитель +
											Выборка.СкладПолучательКод + Разделитель +
											Выборка.ПодразделениеОтправительКод + Разделитель +
											Выборка.ПодразделениеПолучательКод + Разделитель +
											Выборка.НДСвСтоимостиТоваров + Разделитель +
											Выборка.СчетСписанияНДС + Разделитель +
											Выборка.СубконтоСписанияНДС1 + Разделитель +
											Выборка.СубконтоСписанияНДС2 + Разделитель +
											Выборка.СубконтоСписанияНДС3 + Разделитель +
											Выборка.Комментарий );
											
		Док = Выборка.Ссылка.ПолучитьОбъект();
		Для каждого Товар Из Док.Товары Цикл
			ТекстовыйФайл.ДобавитьСтроку("ПеремещениеТоваров_ТЧ_Документа;" + 
										СокрЛП(Товар.Номенклатура.Артикул) + Разделитель + 
										Товар.Коэффициент + Разделитель +
										СокрЛП(Товар.Количество) + Разделитель +
										СокрЛП(Товар.Цена) + Разделитель +
										Товар.ЦенаВРознице + Разделитель +
										Товар.СуммаВРознице + Разделитель +
										Товар.СтавкаНДСВРознице + Разделитель +
										Товар.ДокументОприходования + Разделитель +
										Товар.Себестоимость + Разделитель +
										Товар.СпособУчетаНДС );
		КонецЦикла;

		Если НЕ ФормироватьШаблон Тогда
			ТекстовыйФайл.ДобавитьСтроку("#");
			ТекстовыйФайл.Записать( ТекстовыйФайлПуть, КодировкаТекста.UTF8, Символы.ВК );
		КонецЕсли;
		
	КонецЦикла;
	
	Если ФормироватьШаблон Тогда
		ТекстовыйФайл.ДобавитьСтроку("#");
		ТекстовыйФайл.Записать( ТекстовыйФайлПуть, КодировкаТекста.UTF8, Символы.ВК );
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура СформироватьПеремещение(Команда)
	СформироватьПеремещениеНаСервере();
КонецПроцедуры

#Область Справочники

&НаСервере
Процедура СформироватьНоменклатуруНаСервере()

	ТекстовыйФайлПуть = КаталогДляШаблонов + "Номенклатура.txt";
	ТекстовыйФайл = Новый ТекстовыйДокумент;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 200
		|	Номенклатура.Ссылка КАК Ссылка,
		|	Номенклатура.Артикул КАК Артикул,
		|	Номенклатура.Наименование КАК Наименование,
		|	Номенклатура.Родитель КАК Родитель,
		|	Номенклатура.ЭтоГруппа КАК ЭтоГруппа,
		|	Номенклатура.Код КАК Код,
		|	Номенклатура.ВидНоменклатуры КАК ВидНоменклатуры,
		|	Номенклатура.ЕдиницаИзмерения.Код КАК ЕдиницаИзмеренияКод,
		|	Номенклатура.НаименованиеПолное КАК НаименованиеПолное,
		|	Номенклатура.Комментарий КАК Комментарий,
		|	Номенклатура.Услуга КАК Услуга,
		|	Номенклатура.СтранаПроисхождения.Код КАК СтранаПроисхожденияКод,
		|	Номенклатура.НомерГТД КАК НомерГТД,
		|	Номенклатура.Производитель.ИНН КАК ПроизводительИНН,
		|	Номенклатура.Импортер.ИНН КАК ИмпортерИНН,
		|	Номенклатура.КодТНВЭД КАК КодТНВЭД,
		|	Номенклатура.ПрослеживаемыйТовар КАК ПрослеживаемыйТовар,
		|	Номенклатура.ВесПоСертификатуТовара КАК ВесПоСертификатуТовара,
		|	ЕСТЬNULL(ДопРеквизиты.Значение, ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)) КАК ВесКГ,
		|	Номенклатура.Представление КАК Представление
		|ИЗ
		|	Справочник.Номенклатура КАК Номенклатура
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура.ДополнительныеРеквизиты КАК ДопРеквизиты
		|		ПО Номенклатура.Ссылка = ДопРеквизиты.Ссылка
		|			И (ДопРеквизиты.Свойство.Имя = ""Вескг"")
		|ГДЕ
		|	Номенклатура.Родитель В ИЕРАРХИИ(&Родитель)
		|	И НЕ Номенклатура.Артикул = """"";
	
	Запрос.УстановитьПараметр("Родитель", Справочники.Номенклатура.НайтиПоНаименованию("ТОВАР", Истина) );
	
	Результат = Запрос.Выполнить();
	
	Выборка = Результат.Выбрать();
	
	ТекстовыйФайл.ДобавитьСтроку("****************************************************");
	ТекстовыйФайл.ДобавитьСтроку("СТРУКТУРА СПРАВОЧНИКА НОМЕНКЛАТУРА");
	ТекстовыйФайл.ДобавитьСтроку("****************************************************");
	ТекстовыйФайл.ДобавитьСтроку("СправочникНоменклатура" + Разделитель +
									"Артикул" + Разделитель +
									"Наименование" + Разделитель +
									"НаименованиеПолное" + Разделитель +
									"Родитель" + Разделитель +
									"ЭтоГруппа" + Разделитель +
									"Код" + Разделитель +
									"ВидНоменклатуры" + Разделитель +
									"ЕдиницаИзмеренияКод" + Разделитель +
									"Услуга" + Разделитель +
									"СтранаПроисхожденияКод" + Разделитель +
									"НомерГТД" + Разделитель +
									"ПроизводительИНН" + Разделитель +
									"ИмпортерИНН" + Разделитель +
									"КодТНВЭД" + Разделитель +
									"ПрослеживаемыйТовар" + Разделитель +
									"ВесПоСертификатуТовара" + Разделитель +
									"ВесКГ" + Разделитель +
									"Комментарий" );
									//"Представление" );
	ТекстовыйФайл.ДобавитьСтроку("****************************************************");
	
	Пока Выборка.Следующий() Цикл
		ТекстовыйФайл.ДобавитьСтроку("СправочникНоменклатура" + Разделитель +
										СокрЛП(Выборка.Артикул) + Разделитель +
										Выборка.Наименование + Разделитель +
										Выборка.НаименованиеПолное + Разделитель +
										Выборка.Родитель + Разделитель +
										Выборка.ЭтоГруппа + Разделитель +
										СокрЛП(Выборка.Код) + Разделитель +
										Выборка.ВидНоменклатуры + Разделитель +
										Выборка.ЕдиницаИзмеренияКод + Разделитель +
										Выборка.Услуга + Разделитель +
										Выборка.СтранаПроисхожденияКод + Разделитель +
										СокрЛП(Выборка.НомерГТД) + Разделитель +
										Выборка.ПроизводительИНН + Разделитель +
										Выборка.ИмпортерИНН + Разделитель +
										Выборка.КодТНВЭД + Разделитель +
										?(Выборка.ПрослеживаемыйТовар=Истина,"Истина","Ложь") + Разделитель +
										Выборка.ВесПоСертификатуТовара + Разделитель +
										Выборка.ВесКГ + Разделитель +
										Выборка.Комментарий );
										//Выборка.Представление );
		
	КонецЦикла;
	
	ТекстовыйФайл.Записать( ТекстовыйФайлПуть, КодировкаТекста.UTF8, Символы.ВК);

КонецПроцедуры

&НаКлиенте
Процедура СформироватьНоменклатуру(Команда)
	СформироватьНоменклатуруНаСервере();
КонецПроцедуры

&НаСервере
Процедура СформироватьКонтрагентыНаСервере()

	ТекстовыйФайлПуть = КаталогДляШаблонов + "Контрагенты.txt";
	ТекстовыйФайл = Новый ТекстовыйДокумент;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 100
		|	Контрагенты.ИНН КАК ИНН,
		|	Контрагенты.КПП КАК КПП,
		|	КонтрагентыДополнительныеРеквизиты.Значение КАК КодРС,
		|	Контрагенты.Наименование КАК Наименование,
		|	Контрагенты.НаименованиеПолное КАК НаименованиеПолное,
		|	Контрагенты.Ссылка КАК Контрагент,
		|	Контрагенты.ЮридическоеФизическоеЛицо КАК ЮридическоеФизическоеЛицо,
		//|	ВЫБОР
		//|		КОГДА Контрагенты.ЮридическоеФизическоеЛицо = Перечисление.ЮридическоеФизическоеЛицо.
		//|			ТОГДА ""Истина""
		//|		ИНАЧЕ ""ЛОЖЬ""
		//|	КОНЕЦ КАК ЮридическоеФизическоеЛицо,
		|	Контрагенты.СтранаРегистрации.Код КАК СтранаРегистрацииКод,
		|	Контрагенты.КодПоОКПО КАК КодПоОКПО,
		|	Контрагенты.ОсновнойБанковскийСчет.НомерСчета КАК ОсновнойБанковскийСчетНомерСчета,
		|	Контрагенты.НалоговыйНомер КАК НалоговыйНомер,
		|	Контрагенты.РегистрационныйНомер КАК РегистрационныйНомер,
		|	Контрагенты.ГосударственныйОрган КАК ГосударственныйОрган,
		|	Контрагенты.СвидетельствоСерияНомер КАК СвидетельствоСерияНомер,
		|	Контрагенты.СвидетельствоДатаВыдачи КАК СвидетельствоДатаВыдачи,
		|	ВЫБОР
		|		КОГДА Контрагенты.Самозанятый
		|			ТОГДА ""Истина""
		|		ИНАЧЕ ""ЛОЖЬ""
		|	КОНЕЦ КАК Самозанятый,
		|	КонтрагентыЮридическийАдрес.Представление КАК ЮридическийАдрес,
		|	КонтрагентыФактическийАдрес.Представление КАК ФактическийАдрес,
		|	КонтрагентыПочтовыйАдрес.Представление КАК ПочтовыйАдрес,
		|	КонтрагентыАдресЭлектроннойПочты.Представление КАК АдресЭлектроннойПочты,
		|	КонтрагентыТелефон.Представление КАК Телефон,
		|	Контрагенты.Комментарий КАК Комментарий
		|ИЗ
		|	Справочник.Контрагенты КАК Контрагенты
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты.КонтактнаяИнформация КАК КонтрагентыФактическийАдрес
		|		ПО (КонтрагентыФактическийАдрес.Ссылка = Контрагенты.Ссылка)
		|			И (КонтрагентыФактическийАдрес.Вид = &ФактическийАдрес)
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты.КонтактнаяИнформация КАК КонтрагентыЮридическийАдрес
		|		ПО (КонтрагентыЮридическийАдрес.Ссылка = Контрагенты.Ссылка)
		|			И (КонтрагентыЮридическийАдрес.Вид = &ЮридическийАдрес)
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты.КонтактнаяИнформация КАК КонтрагентыПочтовыйАдрес
		|		ПО (КонтрагентыПочтовыйАдрес.Ссылка = Контрагенты.Ссылка)
		|			И (КонтрагентыПочтовыйАдрес.Вид = &ПочтовыйАдрес)
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты.КонтактнаяИнформация КАК КонтрагентыТелефон
		|		ПО (КонтрагентыТелефон.Ссылка = Контрагенты.Ссылка)
		|			И (КонтрагентыТелефон.Вид = &Телефон)
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты.КонтактнаяИнформация КАК КонтрагентыАдресЭлектроннойПочты
		|		ПО (КонтрагентыАдресЭлектроннойПочты.Ссылка = Контрагенты.Ссылка)
		|			И (КонтрагентыАдресЭлектроннойПочты.Вид = &АдресЭлектроннойПочты)
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты.ДополнительныеРеквизиты КАК КонтрагентыДополнительныеРеквизиты
		|		ПО (КонтрагентыДополнительныеРеквизиты.Ссылка = Контрагенты.Ссылка)
		|			И (КонтрагентыДополнительныеРеквизиты.Свойство.Имя = ""КодРС_Контрагенты"")
		|ГДЕ
		|	НЕ КонтрагентыДополнительныеРеквизиты.Значение ЕСТЬ NULL
		|
		|УПОРЯДОЧИТЬ ПО
		|	Контрагенты.Наименование";
	
	Запрос.УстановитьПараметр("ФактическийАдрес", Справочники.ВидыКонтактнойИнформации.ФактАдресКонтрагента );
	Запрос.УстановитьПараметр("ЮридическийАдрес", Справочники.ВидыКонтактнойИнформации.ЮрАдресКонтрагента );
	Запрос.УстановитьПараметр("ПочтовыйАдрес", Справочники.ВидыКонтактнойИнформации.ПочтовыйАдресКонтрагента );
	Запрос.УстановитьПараметр("Телефон", Справочники.ВидыКонтактнойИнформации.ТелефонКонтрагента );
	Запрос.УстановитьПараметр("АдресЭлектроннойПочты", Справочники.ВидыКонтактнойИнформации.EmailКонтрагенты );
	
	Результат = Запрос.Выполнить();
	
	Выборка = Результат.Выбрать();
	
	ТекстовыйФайл.ДобавитьСтроку("****************************************************");
	ТекстовыйФайл.ДобавитьСтроку("СТРУКТУРА СПРАВОЧНИКА КОНТРАГЕНТЫ");
	ТекстовыйФайл.ДобавитьСтроку("****************************************************");
	ТекстовыйФайл.ДобавитьСтроку("СправочникКонтрагенты" + Разделитель +
									"ИНН" + Разделитель +
									"КПП" + Разделитель +
									"КодРС" + Разделитель +
									"КодПоОКПО" + Разделитель +
									"ЮридическоеФизическоеЛицо" + Разделитель +
									"СтранаРегистрацииКод" + Разделитель +
									"ОсновнойБанковскийСчетНомерСчета" + Разделитель +
									"НалоговыйНомер" + Разделитель +
									"РегистрационныйНомер" + Разделитель +
									"ГосударственныйОрган" + Разделитель +
									"СвидетельствоСерияНомер" + Разделитель +
									"СвидетельствоДатаВыдачи" + Разделитель +
									"Самозанятый" + Разделитель +
									"Комментарий");
		ТекстовыйФайл.ДобавитьСтроку("Наименование" + Разделитель );
		ТекстовыйФайл.ДобавитьСтроку("Наименование полное" + Разделитель );
		ТекстовыйФайл.ДобавитьСтроку("Юридический адрес" + Разделитель );
		ТекстовыйФайл.ДобавитьСтроку("Фактический адрес" + Разделитель );
		ТекстовыйФайл.ДобавитьСтроку("Почтовый адрес" + Разделитель );
		ТекстовыйФайл.ДобавитьСтроку("Адрес электронной почты" + Разделитель );
		ТекстовыйФайл.ДобавитьСтроку("Телефон" + Разделитель );

	ТекстовыйФайл.ДобавитьСтроку("****************************************************");
	
	Пока Выборка.Следующий() Цикл
		ТекстовыйФайл.ДобавитьСтроку("СправочникКонтрагенты" + Разделитель +
									Выборка.ИНН + Разделитель +
									Выборка.КПП + Разделитель +
									СтрЗаменить( Выборка.КодРС, Символы.НПП, "") + Разделитель +
									Выборка.КодПоОКПО + Разделитель +
									Выборка.ЮридическоеФизическоеЛицо + Разделитель +
									Выборка.СтранаРегистрацииКод + Разделитель +
									Выборка.ОсновнойБанковскийСчетНомерСчета + Разделитель +
									Выборка.НалоговыйНомер + Разделитель +
									Выборка.РегистрационныйНомер + Разделитель +
									Выборка.ГосударственныйОрган + Разделитель +
									Выборка.СвидетельствоСерияНомер + Разделитель +
									Выборка.СвидетельствоДатаВыдачи + Разделитель +
									Выборка.Самозанятый + Разделитель +
									Выборка.Комментарий );
		ТекстовыйФайл.ДобавитьСтроку("Наименование" + Разделитель + СокрЛП( Выборка.Наименование ) );
		ТекстовыйФайл.ДобавитьСтроку("Наименование полное" + Разделитель + СокрЛП( Выборка.НаименованиеПолное ) );
		ТекстовыйФайл.ДобавитьСтроку("Юридический адрес" + Разделитель + СтрЗаменить( СокрЛП( Выборка.ЮридическийАдрес ), Символы.ПС, "" ) );
		ТекстовыйФайл.ДобавитьСтроку("Фактический адрес" + Разделитель + СтрЗаменить( СокрЛП( Выборка.ФактическийАдрес ), Символы.ПС, "" ) );
		ТекстовыйФайл.ДобавитьСтроку("Почтовый адрес" + Разделитель + СтрЗаменить( СокрЛП( Выборка.ПочтовыйАдрес ), Символы.ПС, "" ) );
		ТекстовыйФайл.ДобавитьСтроку("Адрес электронной почты" + Разделитель + СокрЛП( Выборка.АдресЭлектроннойПочты ) );
		ТекстовыйФайл.ДобавитьСтроку("Телефон" + Разделитель + Выборка.Телефон );
		ТекстовыйФайл.ДобавитьСтроку("#" );
		
	КонецЦикла;
	
	ТекстовыйФайл.Записать( ТекстовыйФайлПуть, КодировкаТекста.UTF8, Символы.ВК);

КонецПроцедуры

&НаКлиенте
Процедура СформироватьКонтрагенты(Команда)
	СформироватьКонтрагентыНаСервере();
КонецПроцедуры

&НаСервере
Процедура СформироватьДоговораНаСервере()

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 10
		|	""СправочникДоговорыКонтрагентов"" КАК ШапкаСправочника,
		|	ДоговорыКонтрагентов.Ссылка КАК Ссылка,
		|	ДоговорыКонтрагентов.Код КАК КодРС,
		|	ДоговорыКонтрагентов.Дата КАК ДоговорДата,
		|	ДоговорыКонтрагентов.Номер КАК ДоговорНомер,
		|	ДоговорыКонтрагентов.Владелец.ИНН КАК ВладелецИНН,
		|	ДоговорыКонтрагентов.Владелец.КПП КАК ВладелецКПП,
		|	ДоговорыКонтрагентов.Наименование КАК Наименование,
		|	ДоговорыКонтрагентов.ВалютаВзаиморасчетов.Код КАК ВалютаВзаиморасчетовКод,
		|	ДоговорыКонтрагентов.Организация.ИНН КАК ОрганизацияИНН,
		|	ДоговорыКонтрагентов.Организация.КПП КАК ОрганизацияКПП,
		|	ДоговорыКонтрагентов.ВидДоговора КАК ВидДоговора,
		|	ДоговорыКонтрагентов.СрокДействия КАК СрокДействия,
		|	ДоговорыКонтрагентов.Валютный КАК Валютный,
		|	ДоговорыКонтрагентов.ОплатаВВалюте КАК ОплатаВВалюте
		|ИЗ
		|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов.ДополнительныеРеквизиты КАК ДоговорыКонтрагентовДополнительныеРеквизиты
		|		ПО (ДоговорыКонтрагентовДополнительныеРеквизиты.Ссылка = ДоговорыКонтрагентов.Ссылка)
		|			И (ДоговорыКонтрагентовДополнительныеРеквизиты.Свойство.Имя = &Свойство)
		|ГДЕ
		|	НЕ ДоговорыКонтрагентовДополнительныеРеквизиты.Значение ЕСТЬ NULL";
	
	Запрос.УстановитьПараметр("Свойство", "КодРС_ДоговорыКонтрагентов");
	Результат = Запрос.Выполнить();
	
	Выборка = Результат.Выбрать();
	
	ТекстовыйФайлПуть = КаталогДляШаблонов + "ДоговорыКонтрагентов.txt";
	ТекстовыйФайл = Новый ТекстовыйДокумент;
	
	ТекстовыйФайл.ДобавитьСтроку("****************************************************");
	ТекстовыйФайл.ДобавитьСтроку("СТРУКТУРА СПРАВОЧНИКА ДОГОВОРЫ КОНТРАГЕНТОВ");
	ТекстовыйФайл.ДобавитьСтроку("****************************************************");
	ТекстовыйФайл.ДобавитьСтроку("СправочникДоговорыКонтрагентов" + Разделитель +
									"КодРС" + Разделитель +
									"ДоговорДата" + Разделитель +
									"ДоговорНомер" + Разделитель +
									"ВладелецИНН" + Разделитель +
									"ВладелецКПП" + Разделитель +
									"Наименование" + Разделитель +
									"ВалютаВзаиморасчетовКод" + Разделитель +
									"ОрганизацияИНН" + Разделитель +
									"ОрганизацияКПП" + Разделитель +
									"ВидДоговора" + Разделитель +
									"СрокДействия" + Разделитель +
									"Валютный" + Разделитель +
									"ОплатаВВалюте" );
	ТекстовыйФайл.ДобавитьСтроку("****************************************************");
	
	Пока Выборка.Следующий() Цикл
		ТекстовыйФайл.ДобавитьСтроку(""+Выборка.ШапкаСправочника + Разделитель +
										СокрЛП(Выборка.КодРС) + Разделитель +
										Выборка.ДоговорДата + Разделитель +
										Выборка.ДоговорНомер + Разделитель +
										Выборка.ВладелецИНН + Разделитель +
										Выборка.ВладелецКПП + Разделитель +
										Выборка.Наименование + Разделитель +
										Выборка.ВалютаВзаиморасчетовКод + Разделитель +
										Выборка.ОрганизацияИНН + Разделитель +
										Выборка.ОрганизацияКПП + Разделитель +
										Выборка.ВидДоговора + Разделитель +
										Выборка.СрокДействия + Разделитель +
										Выборка.Валютный + Разделитель +
										Выборка.ОплатаВВалюте );
										
	КонецЦикла;
	
	ТекстовыйФайл.ДобавитьСтроку("#");
	ТекстовыйФайл.Записать( ТекстовыйФайлПуть, КодировкаТекста.UTF8, Символы.ВК );

КонецПроцедуры

&НаКлиенте
Процедура СформироватьДоговора(Команда)
	СформироватьДоговораНаСервере();
КонецПроцедуры

&НаСервере
Процедура СформироватьСкладНаСервере()

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	""СправочникСклады"" КАК ШапкаСправочника,
		|	СкладыДополнительныеРеквизиты.Значение КАК КодРС,
		|	Склады.Наименование КАК Наименование,
		|	Склады.ТипСклада КАК ТипСклада,
		|	Склады.Комментарий КАК Комментарий
		|ИЗ
		|	Справочник.Склады КАК Склады
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады.ДополнительныеРеквизиты КАК СкладыДополнительныеРеквизиты
		|		ПО (СкладыДополнительныеРеквизиты.Ссылка = Склады.Ссылка)
		|			И (СкладыДополнительныеРеквизиты.Свойство.Имя = &Свойство)
		|ГДЕ
		|	НЕ СкладыДополнительныеРеквизиты.Значение ЕСТЬ NULL";
	
	Запрос.УстановитьПараметр("Свойство", "КодРС_Склады");
	Результат = Запрос.Выполнить();
	
	Выборка = Результат.Выбрать();
	
	Если ФормироватьШаблон Тогда
		ТекстовыйФайлПуть = КаталогДляШаблонов + "Склады.txt";
		ТекстовыйФайл = Новый ТекстовыйДокумент;
		
		ТекстовыйФайл.ДобавитьСтроку("****************************************************");
		ТекстовыйФайл.ДобавитьСтроку("СТРУКТУРА СПРАВОЧНИКА СКЛАДЫ");
		ТекстовыйФайл.ДобавитьСтроку("****************************************************");
		ТекстовыйФайл.ДобавитьСтроку("СправочникСклады" + Разделитель +
										"КодРС" + Разделитель +
										"Наименование" + Разделитель +
										"ТипСклада" + Разделитель +
										"Комментарий" );
		ТекстовыйФайл.ДобавитьСтроку("****************************************************");
	КонецЕсли;
	
	Пока Выборка.Следующий() Цикл
		Если НЕ ФормироватьШаблон Тогда
			ТекстовыйФайлПуть = КаталогДляШаблонов + "Склады_" + СтрЗаменить( СокрЛП(Выборка.КодРС), "/", "-") + ".txt";
			ТекстовыйФайл = Новый ТекстовыйДокумент;
		КонецЕсли;
		ТекстовыйФайл.ДобавитьСтроку(""+Выборка.ШапкаСправочника + Разделитель +
										СокрЛП(Выборка.КодРС) + Разделитель +
										Выборка.Наименование + Разделитель +
										Выборка.ТипСклада + Разделитель +
										Выборка.Комментарий );
										
		Если НЕ ФормироватьШаблон Тогда
			ТекстовыйФайл.ДобавитьСтроку("#");
			ТекстовыйФайл.Записать( ТекстовыйФайлПуть, КодировкаТекста.UTF8, Символы.ВК );
		КонецЕсли;
		
	КонецЦикла;
	
	Если ФормироватьШаблон Тогда
		ТекстовыйФайл.ДобавитьСтроку("#");
		ТекстовыйФайл.Записать( ТекстовыйФайлПуть, КодировкаТекста.UTF8, Символы.ВК );
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура СформироватьСклад(Команда)
	СформироватьСкладНаСервере();
КонецПроцедуры

&НаСервере
Процедура СформироватьВидыНоменклатурыНаСервере()

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	""СправочникВидыНоменклатуры"" КАК ШапкаСправочника,
		|	ВидыНоменклатуры.Ссылка КАК Ссылка,
		|	ВидыНоменклатуры.КодРС КАК КодРС,
		|	ВидыНоменклатуры.Наименование КАК Наименование,
		|	ВидыНоменклатуры.Услуга КАК Услуга
		|ИЗ
		|	Справочник.ВидыНоменклатуры КАК ВидыНоменклатуры
		|ГДЕ
		|	НЕ ВидыНоменклатуры.КодРС = 0";
	
	Результат = Запрос.Выполнить();
	
	Выборка = Результат.Выбрать();
	
	Если ФормироватьШаблон Тогда
		ТекстовыйФайлПуть = КаталогДляШаблонов + "ВидыНоменклатуры.txt";
		ТекстовыйФайл = Новый ТекстовыйДокумент;
		
		ТекстовыйФайл.ДобавитьСтроку("****************************************************");
		ТекстовыйФайл.ДобавитьСтроку("СТРУКТУРА СПРАВОЧНИКА ВИДЫ НОМЕНКЛАТУРЫ");
		ТекстовыйФайл.ДобавитьСтроку("****************************************************");
		ТекстовыйФайл.ДобавитьСтроку("СправочникВидыНоменклатуры" + Разделитель +
										"КодРС" + Разделитель +
										"Наименование" + Разделитель +
										"Услуга" );
		ТекстовыйФайл.ДобавитьСтроку("****************************************************");
	КонецЕсли;
	
	Пока Выборка.Следующий() Цикл
		ТекстовыйФайл.ДобавитьСтроку(""+Выборка.ШапкаСправочника + Разделитель +
										СокрЛП(Выборка.КодРС) + Разделитель +
										Выборка.Наименование + Разделитель +
										Выборка.Услуга );
										
	КонецЦикла;
	
	ТекстовыйФайл.ДобавитьСтроку("#");
	ТекстовыйФайл.Записать( ТекстовыйФайлПуть, КодировкаТекста.UTF8, Символы.ВК );

КонецПроцедуры

&НаКлиенте
Процедура СформироватьВидыНоменклатуры(Команда)
	СформироватьВидыНоменклатурыНаСервере();
КонецПроцедуры

&НаСервереБезКонтекста
Процедура НоменклатураИсправитьНаСервере()

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Номенклатура.Ссылка КАК Ссылка,
		|	Номенклатура.Код КАК Код,
		|	Номенклатура.Артикул КАК Артикул
		|ИЗ
		|	Справочник.Номенклатура КАК Номенклатура
		|ГДЕ
		|	НЕ Номенклатура.Код = Номенклатура.Артикул
		|	И НЕ Номенклатура.Код ПОДОБНО ""%БП%""
		|	И НЕ Номенклатура.Код ПОДОБНО ""%00-00%""";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Объект = ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
		Объект.ОбменДанными.Загрузка = Истина;
		Объект.Артикул = Объект.Код;
		Объект.Записать();
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура НоменклатураИсправить(Команда)
	НоменклатураИсправитьНаСервере();
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ФормаВидыНоменклатурыИсправитьНаСервере()

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	""СправочникВидыНоменклатуры"" КАК ШапкаСправочника,
		|	ВидыНоменклатуры.Ссылка КАК Ссылка,
		|	ВидыНоменклатуры.КодРС КАК КодРС,
		|	ВидыНоменклатуры.Наименование КАК Наименование,
		|	ВидыНоменклатуры.Услуга КАК Услуга
		|ИЗ
		|	Справочник.ВидыНоменклатуры КАК ВидыНоменклатуры
		|ГДЕ
		|	НЕ ВидыНоменклатуры.КодРС = 0";
	
	Результат = Запрос.Выполнить();
	
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		НаборЗаписей1 = РегистрыСведений.СчетаУчетаНоменклатуры.СоздатьМенеджерЗаписи();
		НаборЗаписей1.ВидНоменклатуры = Выборка.Ссылка;
		НаборЗаписей1.СчетУчета = ПланыСчетов.Хозрасчетный.ТоварыНаСкладах;
		НаборЗаписей1.СчетУчетаПередачи = ПланыСчетов.Хозрасчетный.ПокупныеТоварыОтгруженные;
		НаборЗаписей1.СчетУчетаНДСПоПриобретеннымЦенностям = ПланыСчетов.Хозрасчетный.НДСпоПриобретеннымМПЗ;
		НаборЗаписей1.СчетУчетаНДСПоРеализации = ПланыСчетов.Хозрасчетный.Продажи_НДС;
		НаборЗаписей1.СчетУчетаНДСУплаченногоНаТаможне = ПланыСчетов.Хозрасчетный.НДСуплачиваемыйТаможеннымОрганам;
		НаборЗаписей1.Записать( Истина );
		
		НаборЗаписей2 = РегистрыСведений.СчетаУчетаНоменклатуры.СоздатьМенеджерЗаписи();
		НаборЗаписей2.ВидНоменклатуры = Выборка.Ссылка;
		НаборЗаписей2.Склад = Справочники.Склады.НайтиПоНаименованию( "Склад отдела Производства" );
		НаборЗаписей2.ТипСклада = Перечисления.ТипыСкладов.ОптовыйСклад;
		НаборЗаписей2.СчетУчета = ПланыСчетов.Хозрасчетный.ПокупныеПолуфабрикатыИКомплектующие;
		НаборЗаписей2.СчетУчетаПередачи = ПланыСчетов.Хозрасчетный.ТоварыНаСкладах;
		НаборЗаписей2.Записать( Истина );
		
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура ФормаВидыНоменклатурыИсправить(Команда)
	ФормаВидыНоменклатурыИсправитьНаСервере();
КонецПроцедуры

&НаСервере
Процедура КонтрагентыИсправитьНаСервере()

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Контрагенты.Ссылка КАК Ссылка,
		|	ЕСТЬNULL(ДопРеквизитыIDclient.Значение, """") КАК IDClient,
		|	ЕСТЬNULL(ДопРеквизитыКодРС.Значение, """") КАК КодРС,
		|	Контрагенты.Комментарий КАК Комментарий
		|ИЗ
		|	Справочник.Контрагенты КАК Контрагенты
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты.ДополнительныеРеквизиты КАК ДопРеквизитыIDclient
		|		ПО Контрагенты.Ссылка = ДопРеквизитыIDclient.Ссылка
		|			И (ДопРеквизитыIDclient.Свойство.Имя = ""IDclient_d2d6ed2cd5ee4699b8a0ff23565f1920"")
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты.ДополнительныеРеквизиты КАК ДопРеквизитыКодРС
		|		ПО Контрагенты.Ссылка = ДопРеквизитыКодРС.Ссылка
		|			И (ДопРеквизитыКодРС.Свойство.Имя = ""КодРС_Контрагенты"")
		|ГДЕ
		|	НЕ Контрагенты.ЭтоГруппа
		|	И ДопРеквизитыIDclient.Значение ЕСТЬ NULL
		|	И ДопРеквизитыКодРС.Значение ЕСТЬ NULL
		|	И НЕ (ВЫРАЗИТЬ(Контрагенты.Комментарий КАК СТРОКА(5))) = """"";
	
	Результат = Запрос.Выполнить();
	
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Об = Выборка.Ссылка.ПолучитьОбъект();
		ЗаполнитьДополнительныйРеквизит( Об, "Код РС (контрагент)", Число( Выборка.Комментарий ) );
		ЗаполнитьДополнительныйРеквизит( Об, "IDclient_d2d6ed2cd5ee4699b8a0ff23565f1920", Число( Выборка.Комментарий ) );
		Об.Записать();
	КонецЦикла;
	
	//Запрос = Новый Запрос;
	//Запрос.Текст = 
	//	"ВЫБРАТЬ
	//	|	Контрагенты.Ссылка КАК Ссылка,
	//	|	Контрагенты.ИНН КАК ИНН
	//	|ПОМЕСТИТЬ ВременнаяТаблица
	//	|ИЗ
	//	|	Справочник.Контрагенты КАК Контрагенты
	//	|ГДЕ
	//	|	НЕ Контрагенты.ИНН ЕСТЬ NULL
	//	|;
	//	|
	//	|////////////////////////////////////////////////////////////////////////////////
	//	|ВЫБРАТЬ
	//	|	ВременнаяТаблица.Ссылка КАК Ссылка,
	//	|	ПОДСТРОКА(ВременнаяТаблица.ИНН, 1, 12) КАК ИНН
	//	|ИЗ
	//	|	ВременнаяТаблица КАК ВременнаяТаблица
	//	|ГДЕ
	//	|	НЕ ПОДСТРОКА(ВременнаяТаблица.ИНН, 1, 12) = ПОДСТРОКА(ВременнаяТаблица.ИНН, 1, 10)";
	//
	//Запрос.УстановитьПараметр("ЮридическоеФизическоеЛицо", Перечисления.ЮридическоеФизическоеЛицо.ПустаяСсылка() );
	//
	//РезультатЗапроса = Запрос.Выполнить();
	//
	//Выборка = РезультатЗапроса.Выбрать();
	//
	//Пока Выборка.Следующий() Цикл
	//	Об = Выборка.Ссылка.ПолучитьОбъект();
	//	Об.ЮридическоеФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ФизическоеЛицо;
	//	Об.Записать();
	//КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьДополнительныйРеквизит( СпрЭлемент, НаименованиеРеквизита, ЗначениеДопРеквизита)
	
	// Получаем ссылку на доп реквизит
	ДопРеквизитПроверено = ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоНаименованию( НаименованиеРеквизита, Истина);
	ЕстьСтроки = СпрЭлемент.ДополнительныеРеквизиты.НайтиСтроки(Новый Структура("Свойство", ДопРеквизитПроверено));
	Если ЕстьСтроки.Количество() = 0 Тогда
	     СтрокаТЧ = СпрЭлемент.ДополнительныеРеквизиты.Добавить();
	     СтрокаТЧ.Свойство = ДопРеквизитПроверено;
	Иначе
	     СтрокаТЧ = ЕстьСтроки[0];
	КонецЕсли;
	СтрокаТЧ.Значение = ЗначениеДопРеквизита;
	
КонецПроцедуры

&НаКлиенте
Процедура КонтрагентыИсправить(Команда)
	КонтрагентыИсправитьНаСервере();
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ИсправитьРеализацииПоТорговымПлощадкамНаСервере( ДатаНачала, ДатаОкончания )
	
	НоменклатурнаяГруппаТорговойПлощадки = Справочники.НоменклатурныеГруппы.НайтиПоНаименованию( "Торговля розничная, осуществляемая непосредственно при помощи сети Интернет" );
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТорговыеПлощадки.Период КАК Период,
		|	ТорговыеПлощадки.СтарыйКонтрагент КАК СтарыйКонтрагент,
		|	ТорговыеПлощадки.Контрагент КАК Контрагент,
		|	ТорговыеПлощадки.ДоговорКонтрагента КАК ДоговорКонтрагента,
		|	ТорговыеПлощадки.КодРС КАК КодРС,
		|	ТорговыеПлощадки.Наименование КАК Наименование
		|ИЗ
		|	РегистрСведений.ТорговыеПлощадки КАК ТорговыеПлощадки";
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл

		Запрос1 = Новый Запрос;
		Запрос1.Текст = 
			"ВЫБРАТЬ
			|	РеализацияТоваровУслуг.Ссылка КАК Ссылка
			|ИЗ
			|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
			|ГДЕ
			|	РеализацияТоваровУслуг.Проведен
			|	И РеализацияТоваровУслуг.Контрагент = &Контрагент
			|	И РеализацияТоваровУслуг.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
			|	И РеализацияТоваровУслуг.Комментарий ПОДОБНО &Комментарий";
		Запрос1.УстановитьПараметр("ДатаНачала", ДатаНачала);
		Запрос1.УстановитьПараметр("ДатаОкончания", ДатаОкончания);
		Запрос1.УстановитьПараметр("Контрагент", Выборка.СтарыйКонтрагент );
		Запрос1.УстановитьПараметр("Комментарий", "%" + СокрЛП( Выборка.Наименование ) + "%");
		
		//Запрос1.Текст = 
		//	"ВЫБРАТЬ
		//	|	РеализацияТоваровУслуг.Ссылка КАК Ссылка
		//	|ИЗ
		//	|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
		//	|ГДЕ
		//	|	РеализацияТоваровУслуг.Проведен
		//	|	И РеализацияТоваровУслуг.Контрагент = &Контрагент
		//	|	И РеализацияТоваровУслуг.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания";
		//
		//Запрос1.УстановитьПараметр("ДатаНачала", ДатаНачала);
		//Запрос1.УстановитьПараметр("ДатаОкончания", ДатаОкончания);
		//Запрос1.УстановитьПараметр("Контрагент", Выборка.Контрагент );
		
		Результат1 = Запрос1.Выполнить();
		
		Выборка1 = Результат1.Выбрать();
		
		НачатьТранзакцию();
		Количество = 1;
		
		Пока Выборка1.Следующий() Цикл
			Док = Выборка1.Ссылка.ПолучитьОбъект();
			Док.Контрагент = Выборка.Контрагент;
			Док.ДоговорКонтрагента = Выборка.ДоговорКонтрагента;
			Для каждого Стр Из Док.Товары Цикл
				Стр.СчетДоходов = ПланыСчетов.Хозрасчетный.ВыручкаНеЕНВД;
				Стр.СчетРасходов = ПланыСчетов.Хозрасчетный.СебестоимостьПродажНеЕНВД;
				Стр.Субконто = НоменклатурнаяГруппаТорговойПлощадки;
			КонецЦикла;
			Док.Записать( РежимЗаписиДокумента.Проведение );
			Количество = Количество + 1;
			Если Количество = 500 Тогда
				Количество = 1;
				ЗафиксироватьТранзакцию();
				НачатьТранзакцию();
			КонецЕсли;
		КонецЦикла;
		
		ЗафиксироватьТранзакцию();
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ИсправитьРеализацииПоТорговымПлощадкам(Команда)
	ИсправитьРеализацииПоТорговымПлощадкамНаСервере( Период.ДатаНачала, Период.ДатаОкончания );
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ИсправитьРеализацииПоТорговымПлощадкамНаСервере3( ДатаНачала, ДатаОкончания )
	
	НоменклатурнаяГруппа = Справочники.НоменклатурныеГруппы.НайтиПоНаименованию( "Основная номенклатурная группа" );
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РеализацияТоваровУслуг.Ссылка КАК Ссылка
		|ИЗ
		|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
		|ГДЕ
		|	РеализацияТоваровУслуг.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
		|	И РеализацияТоваровУслуг.Проведен
		|	И НЕ РеализацияТоваровУслуг.Контрагент В
		|			(ВЫБРАТЬ
		|				ТорговыеПлощадкиСрезПоследних.Контрагент КАК Контрагент
		|			ИЗ
		|				РегистрСведений.ТорговыеПлощадки.СрезПоследних КАК ТорговыеПлощадкиСрезПоследних)";
	
	Запрос.УстановитьПараметр("ДатаНачала", ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания", ДатаОкончания);
	
	Результат = Запрос.Выполнить();
	
	Выборка = Результат.Выбрать();
	
	НачатьТранзакцию();
	Количество = 1;
	
	Пока Выборка.Следующий() Цикл
		Док = Выборка.Ссылка.ПолучитьОбъект();
		Для каждого Стр Из Док.Товары Цикл
			Стр.СчетДоходов = ПланыСчетов.Хозрасчетный.ВыручкаНеЕНВД;
			Стр.СчетРасходов = ПланыСчетов.Хозрасчетный.СебестоимостьПродажНеЕНВД;
			Стр.Субконто = НоменклатурнаяГруппа;
		КонецЦикла;
		Док.Записать( РежимЗаписиДокумента.Проведение );
		Количество = Количество + 1;
		Если Количество = 500 Тогда
			Количество = 1;
			ЗафиксироватьТранзакцию();
			НачатьТранзакцию();
		КонецЕсли;
	КонецЦикла;
	
	ЗафиксироватьТранзакцию();
		
КонецПроцедуры

&НаКлиенте
Процедура ИсправитьРеализацииПоТорговымПлощадкам3(Команда)
	ИсправитьРеализацииПоТорговымПлощадкамНаСервере3( Период.ДатаНачала, Период.ДатаОкончания );
КонецПроцедуры

&НаСервере
Процедура ИсправитьРеализацииНаСервере( ДатаНачала, ДатаОкончания )
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	РеализацияТоваровУслугТовары.Ссылка КАК Ссылка,
		|	РеализацияТоваровУслугТовары.Ссылка.Контрагент КАК Контрагент
		|ИЗ
		|	Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
		|ГДЕ
		|	(ВЫРАЗИТЬ(РеализацияТоваровУслугТовары.Сумма / РеализацияТоваровУслугТовары.Количество КАК ЧИСЛО(15, 2))) <> РеализацияТоваровУслугТовары.Цена
		|	И РеализацияТоваровУслугТовары.Ссылка.Проведен
		|	И РеализацияТоваровУслугТовары.Ссылка.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания";
	
	Запрос.УстановитьПараметр("ДатаНачала", ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания", ДатаОкончания);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Док = Выборка.Ссылка.ПолучитьОбъект();
		//Док = Документы.РеализацияТоваровУслуг.НайтиПоНомеру().ПолучитьОбъект();
		Для каждого Стр Из Док.Товары Цикл
			Стр.Цена = Окр( Стр.Сумма / Стр.Количество, 2, 1);
		КонецЦикла;
		Док.Записать( РежимЗаписиДокумента.Проведение );
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ИсправитьРеализации(Команда)
	ИсправитьРеализацииНаСервере( Период.ДатаНачала, Период.ДатаОкончания );
КонецПроцедуры

&НаСервере
Процедура ВозвратыПровестиНаСервере( ДатаНачала, ДатаОкончания )
	
	Запрос = Новый Запрос;
	//Запрос.Текст = 
	//	"ВЫБРАТЬ
	//	|	ВозвратТоваровОтПокупателя.Ссылка КАК Ссылка
	//	|ИЗ
	//	|	Документ.ВозвратТоваровОтПокупателя КАК ВозвратТоваровОтПокупателя
	//	|ГДЕ
	//	|	ВозвратТоваровОтПокупателя.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
	//	|	И НЕ ВозвратТоваровОтПокупателя.Проведен
	//	|	И ВозвратТоваровОтПокупателя.Ответственный = &Ответственный";
	
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВозвратТоваровОтПокупателя.Ссылка КАК Ссылка
		|ИЗ
		|	Документ.ВозвратТоваровОтПокупателя КАК ВозвратТоваровОтПокупателя
		|ГДЕ
		|	ВозвратТоваровОтПокупателя.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
		|	И НЕ ВозвратТоваровОтПокупателя.Проведен
		|	И ВозвратТоваровОтПокупателя.Ответственный = &Ответственный
		|	И НЕ ВозвратТоваровОтПокупателя.Контрагент = ВозвратТоваровОтПокупателя.Сделка.Контрагент";
	
	Запрос.УстановитьПараметр("ДатаНачала", ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания", ДатаОкончания);
	Запрос.УстановитьПараметр("Ответственный", Справочники.Пользователи.НайтиПоНаименованию("Робот") );
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Док = Выборка.Ссылка.ПолучитьОбъект();
		Док.Контрагент = Док.Сделка.Контрагент;
		Док.ДоговорКонтрагента = Док.Сделка.ДоговорКонтрагента;
		Попытка
			Док.Записать( РежимЗаписиДокумента.Проведение );
		Исключение
			Док.Записать( РежимЗаписиДокумента.Запись );
		КонецПопытки;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ВозвратыПровести(Команда)
	ВозвратыПровестиНаСервере( Период.ДатаНачала, Период.ДатаОкончания );
КонецПроцедуры

&НаКлиенте
Процедура СоздатьBatФайлНаСервере( Буфер )

	ПутьКФайлу = "C:\DEV\Павлов Владимир\vl.bat";
	ТД = Новый ТекстовыйДокумент;
	ТД.ДобавитьСтроку("chcp");
	//ТД.ДобавитьСтроку("copy \\corp.3l.ru\dfs\ФЭД\Бухгалтерия\!Обмен_1С_RS\1C_RS\Archive\РТУ\РТУ_.txt \\corp.3l.ru\dfs\ФЭД\Бухгалтерия\!Обмен_1С_RS\1C_RS\*.*");
	Массив = СтрРазделить( Буфер, Символы.ПС, );
	Для каждого Стр Из Массив Цикл
		ТД.ДобавитьСтроку("copy \\corp.3l.ru\dfs\ФЭД\Бухгалтерия\!Обмен_1С_RS\1C_RS\Archive\РТУ\РТУ_" + СокрЛП( Стр ) + ".txt \\corp.3l.ru\dfs\ФЭД\Бухгалтерия\!Обмен_1С_RS\1C_RS\*.*" );
	КонецЦикла;

	ТД.Записать( ПутьКФайлу, КодировкаТекста.OEM );

КонецПроцедуры

&НаКлиенте
Функция ПолучитьТекстБуфераОбмена()
#Если Клиент Тогда
    Об = Новый COMОбъект("htmlfile");
    Возврат Об.ParentWindow.ClipboardData.Getdata("Text");
#КонецЕсли
КонецФункции

&НаКлиенте
Процедура СоздатьBatФайл(Команда)
	Буфер = ПолучитьТекстБуфераОбмена();
	СоздатьBatФайлНаСервере( Буфер );
	Сообщение = Новый СообщениеПользователю;
	Сообщение.Текст = "" + Буфер;
	Сообщение.Сообщить();
КонецПроцедуры

&НаСервере
Процедура ОбработкаОповещенияНаСервере()
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	ОбработкаОповещенияНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ПереименоватьОшибочныеФайлы(Команда)
	ПереименоватьОшибочныеФайлыНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПереименоватьОшибочныеФайлыНаСервере()
	_Объект = РеквизитФормыВЗначение( "Объект" );
	_Объект.ПереименоватьОшибочныеФайлыНаСервереМодульОбъекта();
КонецПроцедуры

&НаСервере
Процедура СправкаНаСервере(ИмяСвойства)
	
	Попытка
		Обработка = РеквизитФормыВЗначение("Объект");
		Сообщить(Обработка[ИмяСвойства]);
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьВводСвойстваОбъекта(Результат, ДопПараметры) Экспорт
	
	Если ЗначениеЗаполнено(Результат) Тогда
		СправкаНаСервере(Результат);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Справка(Команда)
	
	Оповещение = Новый ОписаниеОповещения("ОбработатьВводСвойстваОбъекта", ЭтотОбъект);
	ПоказатьВводСтроки(Оповещение, , "Введите имя свойства объекта...");
	
КонецПроцедуры

&НаКлиенте
Процедура КаталогНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = ЛОЖЬ;
	
	Режим = РежимДиалогаВыбораФайла.ВыборКаталога;
	ДиалогОткрытия = Новый ДиалогВыбораФайла(Режим);
	ДиалогОткрытия.Каталог = Каталог;
	ДиалогОткрытия.Заголовок = "Выберите каталог с файлами для загрузки";
	
	Параметр = "";
	Оповещение = Новый ОписаниеОповещения("ВыборКаталога_Завершение", ЭтотОбъект, Параметр);
	ДиалогОткрытия.Показать(Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыборКаталога_Завершение(Результат, Параметр) Экспорт
	
	Если Результат = Неопределено Тогда
		Сообщить("Каталог не выбран");
		Возврат;
	КонецЕсли;
	Каталог = Результат[0];
	
КонецПроцедуры

&НаКлиенте
Процедура НеГрузитьНоменклатуруИКонтрагентов(Команда)
	
	Элементы.ФормаНеГрузитьНоменклатуруИКонтрагентов.Пометка = НЕ Элементы.ФормаНеГрузитьНоменклатуруИКонтрагентов.Пометка;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПериод()
	
	Период.ДатаНачала = РеквизитФормыВЗначение("Объект").ДатаЗапретаРедактированияТекПользователя();
	Период.ДатаОкончания = КонецМесяца(ТекущаяДата());
	
КонецПроцедуры

&НаСервере
Функция СписокЗагружаемыхПоУмолчанию()
	
	ПараметрыПоУмолчанию = РеквизитФормыВЗначение("Объект").ПараметрыПоУмолчанию();
	СЗ = ПараметрыПоУмолчанию.СписокЗагружаемыхОбъектов;
	Удаляемые = "СправочникНоменклатураРС СправочникКонтрагенты СправочникБренд Р_Т_У П_Т_У";
	Для Сч = -СЗ.Количество() По -1 Цикл
		Элемент = СЗ[-Сч-1];
		Если СтрНайти(Удаляемые, Элемент.Значение) > 0 Тогда
			СЗ.Удалить(Элемент);
		КонецЕсли;
	КонецЦикла;
	
	Возврат СЗ;
	
КонецФункции

&НаКлиенте
Процедура ЗаполнитьСписокЗагружаемых()
	
	СписокЗагружаемыхОбъектов = СписокЗагружаемыхПоУмолчанию();
	
КонецПроцедуры

&НаКлиенте
Процедура СброситьНастройки(Команда)
	
	ЗаполнитьСписокЗагружаемых();
	ЗаполнитьПериод();
	
КонецПроцедуры

#КонецОбласти

#Область Инициализация
	Разделитель = ";";
	КаталогДляШаблонов="C:\DEV\Павлов Владимир\Buh\1C_RS\2022\";
	ДатаНачала = '20211001';
	ДатаОкончания = '20211005235959';
	ФормироватьШаблон = Истина;
#КонецОбласти